{
  "openapi": "3.0.3",
  "info": {
    "title": "@weka-api",
    "version": "3.11.0"
  },
  "servers": [
    {
      "url": "/api/v2"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/activeDirectory": {
      "put": {
        "tags": [
          "Active directory"
        ],
        "summary": "Update active directory",
        "operationId": "updateLdapActiveDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get all alerts",
        "operationId": "getAlerts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/types": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get alerts types",
        "operationId": "getAlertsTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/description": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get alerts description",
        "operationId": "getAlertDescription",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/{alert_type}/mute": {
      "put": {
        "tags": [
          "Alerts"
        ],
        "summary": "Mute alerts by type",
        "operationId": "muteAlertByType",
        "parameters": [
          {
            "name": "alert_type",
            "in": "path",
            "description": "Alert type",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/{alert_type}/unmute": {
      "put": {
        "tags": [
          "Alerts"
        ],
        "summary": "Unmute alerts by type",
        "operationId": "unmuteAlertByType",
        "parameters": [
          {
            "name": "alert_type",
            "in": "path",
            "description": "Alert type",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/wekaHome": {
      "get": {
        "tags": [
          "Weka home"
        ],
        "summary": "Get cloud config",
        "operationId": "getCloud",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/wekaHome/credentials": {
      "get": {
        "tags": [
          "Weka home"
        ],
        "summary": "Get cloud credentials",
        "operationId": "getCloudCredentials",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/wekaHome/proxy": {
      "get": {
        "tags": [
          "Weka home"
        ],
        "summary": "Get cloud proxy",
        "operationId": "getCloudProxy",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Weka home"
        ],
        "summary": "Set cloud proxy",
        "operationId": "setCloudProxy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/wekaHome/uploadRate": {
      "get": {
        "tags": [
          "Weka home"
        ],
        "summary": "Get cloud upload rate",
        "operationId": "getCloudUploadRate",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Weka home"
        ],
        "summary": "Update cloud upload rate",
        "operationId": "updateCloudUploadRate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/wekaHome/url": {
      "get": {
        "tags": [
          "Weka home"
        ],
        "summary": "Get cloud url",
        "operationId": "getCloudUrl",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/wekaHome/enable": {
      "post": {
        "tags": [
          "Weka home"
        ],
        "summary": "Enable cloud",
        "operationId": "enableCloud",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/wekaHome/disable": {
      "post": {
        "tags": [
          "Weka home"
        ],
        "summary": "Disable cloud",
        "operationId": "disableCloud",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/cluster": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "summary": "Get cluster status",
        "operationId": "getClusterStatus",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cluster"
        ],
        "summary": "Update cluster",
        "operationId": "updateCluster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/defaultNet": {
      "get": {
        "tags": [
          "Default network"
        ],
        "summary": "Get default network",
        "operationId": "getDefaultNetwork",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Default network"
        ],
        "summary": "Update default network",
        "operationId": "updateDefaultNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/defaultNet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Default network"
        ],
        "summary": "Set default network",
        "operationId": "setDefaultNetwork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/defaultNet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Default network"
        ],
        "summary": "Reset default network",
        "operationId": "resetDefaultNetwork",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/drives": {
      "get": {
        "tags": [
          "Drive"
        ],
        "summary": "Get drives list",
        "operationId": "getDrives",
        "parameters": [
          {
            "name": "show_removed",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_11"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Drive"
        ],
        "summary": "Provision drives",
        "operationId": "provisionDrives",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_12"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/drives/{uid}": {
      "get": {
        "tags": [
          "Drive"
        ],
        "summary": "Get single drive",
        "operationId": "getSingleDrive",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Drive uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_12"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Drive"
        ],
        "summary": "Remove drive",
        "operationId": "deleteDrive",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Drive uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/drives/activate": {
      "post": {
        "tags": [
          "Drive"
        ],
        "summary": "Activate drives",
        "operationId": "activateDrives",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_7"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/drives/deactivate": {
      "post": {
        "tags": [
          "Drive"
        ],
        "summary": "Deactivate drives",
        "operationId": "deactivatesDrives",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_8"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events",
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "num_results",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type_list",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "category_list",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "dsc"
              ]
            }
          },
          {
            "name": "show_internal",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "next_token",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/events/describe": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events description",
        "operationId": "getEventsDescription",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "list of categories",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "list of categories",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "show_internal",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/events/local": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events from the targeted host for the API call",
        "operationId": "getLocalEvents",
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stem_mode",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_internal",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "next_token",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_15"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/failureDomains": {
      "get": {
        "tags": [
          "Failure domains"
        ],
        "summary": "Get failure domains",
        "operationId": "getFailureDomains",
        "parameters": [
          {
            "name": "show_removed",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_16"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/failureDomains/{uid}": {
      "get": {
        "tags": [
          "Failure domains"
        ],
        "summary": "Get single failure domain",
        "operationId": "getSingleFailureDomain",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Domain uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_17"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/fileSystems": {
      "get": {
        "tags": [
          "File system"
        ],
        "summary": "Get all file systems",
        "operationId": "getFileSystems",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_18"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "File system"
        ],
        "summary": "Create file system",
        "operationId": "createFileSystem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_9"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/fileSystems/{uid}": {
      "get": {
        "tags": [
          "File system"
        ],
        "summary": "Get file system",
        "operationId": "getFileSystem",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "file system uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "File system"
        ],
        "summary": "Update file system",
        "operationId": "updateFileSystem",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "File system uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_10"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "File system"
        ],
        "summary": "Delete file system",
        "operationId": "deleteFileSystem",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "File system uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/fileSystems/{uid}/objectStores": {
      "post": {
        "tags": [
          "File system"
        ],
        "summary": "Attach object store to file system",
        "operationId": "attachObsToFs",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "File system uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_11"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/fileSystems/{uid}/objectStores/{obs_uid}": {
      "delete": {
        "tags": [
          "File system"
        ],
        "summary": "Detach object store from file system",
        "operationId": "detachObsFromFS",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "file system uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "obs_uid",
            "in": "path",
            "description": "object store system uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_20"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/fileSystems/download": {
      "post": {
        "tags": [
          "File system"
        ],
        "summary": "Download file system from object store",
        "operationId": "downloadFS",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_12"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/hosts": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get all hosts",
        "operationId": "getHosts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_21"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Add host to cluster",
        "operationId": "addHost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_13"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_22"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/{uid}": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get single host",
        "operationId": "getSingleHost",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_22"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hosts"
        ],
        "summary": "Configure host - Need to apply host after",
        "operationId": "updateHost",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_14"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hosts"
        ],
        "summary": "Remove host from cluster",
        "operationId": "removeHost",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/apply": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Apply hosts",
        "operationId": "applyHosts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_15"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/{uid}/apply": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Apply host",
        "operationId": "applyHost",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/lastFailureReason/{uid}": {
      "delete": {
        "tags": [
          "Hosts"
        ],
        "summary": "Clear host last failure",
        "operationId": "clearHostFailure",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/{uid}/resources": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get host resources",
        "operationId": "getHostResources",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "resource type can be Staging or Stable (Staging if empty)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/activate": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Activate hosts",
        "operationId": "activateHosts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_16"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/{uid}/activate": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Activate host",
        "operationId": "activateHost",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/deactivate": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Deactivate hosts",
        "operationId": "deactivateHosts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_17"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/{uid}/deactivate": {
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Deactivate host",
        "operationId": "deactivateHost",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/netdevs": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get all hosts network",
        "operationId": "getAllHostsNetwork",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_24"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/{uid}/netdevs": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "summary": "Get host network",
        "operationId": "getHostNetwork",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_24"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hosts"
        ],
        "summary": "Create host network - Need to apply host after",
        "operationId": "createHostNetwork",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_18"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/hosts/{uid}/netdevs/{netdev_uid}": {
      "delete": {
        "tags": [
          "Hosts"
        ],
        "summary": "Remove host network - Need to apply host after",
        "operationId": "removeHostNetwork",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "netdev_uid",
            "in": "path",
            "description": "network device uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_host",
            "in": "query",
            "description": "Apply the host after this change",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/interfaceGroups": {
      "get": {
        "tags": [
          "Interface group"
        ],
        "summary": "Get interface groups",
        "operationId": "getInterfaceGroups",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_25"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Interface group"
        ],
        "summary": "Create interface group",
        "operationId": "createInterfaceGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_19"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/interfaceGroups/{uid}": {
      "get": {
        "tags": [
          "Interface group"
        ],
        "summary": "Get interface group",
        "operationId": "getInterfaceGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "interface group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Interface group"
        ],
        "summary": "Update interface group",
        "operationId": "updateInterfaceGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "interface group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_20"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Interface group"
        ],
        "summary": "delete interface group",
        "operationId": "deleteInterfaceGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "interface group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/interfaceGroups/{uid}/ips": {
      "post": {
        "tags": [
          "Interface group"
        ],
        "summary": "Add ip range to interface group",
        "operationId": "addIpRangeToInterfaceGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Interface group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_21"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/interfaceGroups/{uid}/ports/{host_uid}": {
      "post": {
        "tags": [
          "Interface group"
        ],
        "summary": "Add port to interface group",
        "operationId": "addPortToInterfaceGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Interface group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "host_uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_22"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/interfaceGroups/{uid}/ports/{host_uid}/{port}": {
      "delete": {
        "tags": [
          "Interface group"
        ],
        "summary": "Delete port from interface group",
        "operationId": "deletePortFromInterfaceGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Interface group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "host_uid",
            "in": "path",
            "description": "Host uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "port",
            "in": "path",
            "description": "Port to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "eth0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/interfaceGroups/{uid}/ips/{ips}": {
      "delete": {
        "tags": [
          "Interface group"
        ],
        "summary": "Delete ip range from interface group",
        "operationId": "deleteIpRangeFromInterfaceGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "interface group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ips",
            "in": "path",
            "description": "IP or IP range to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "172.31.5.5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/kms": {
      "get": {
        "tags": [
          "KMS"
        ],
        "summary": "Get kms configuration",
        "operationId": "getKms",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_27"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "KMS"
        ],
        "summary": "Set kms vault configuration (base_url,master_key_name,token) or set kms kmip configuration (server_endpoint, key_uid, client_cert_pem, client_key_pem, ca_cert_pem)\n",
        "operationId": "setKms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_23"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KMS"
        ],
        "summary": "Delete kms configuration",
        "operationId": "deleteKms",
        "parameters": [
          {
            "name": "force_delete",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/kms/type": {
      "get": {
        "tags": [
          "KMS"
        ],
        "summary": "Get kms type",
        "operationId": "getKmsType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_28"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/kms/rewrap": {
      "post": {
        "tags": [
          "KMS"
        ],
        "summary": "Rewrap KMS key",
        "operationId": "rewrapKmsKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_24"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/ldap": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "summary": "Get LDAP configuration",
        "operationId": "getLdap",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_29"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LDAP"
        ],
        "summary": "Update LDAP configuration",
        "operationId": "updateLdap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_25"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LDAP"
        ],
        "summary": "Reset LDAP configuration",
        "operationId": "deleteLdap",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/license": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Get license",
        "operationId": "getLicense",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_30"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "License"
        ],
        "summary": "Set license",
        "description": "Classic license (license) or PAYG license (plan_id,secret_key,[url])",
        "operationId": "setLicense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_26"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "License"
        ],
        "summary": "Reset license",
        "operationId": "resetLicense",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "login to system",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_27"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_31"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/login/refresh": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "get authentication tokens using refresh token",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_28"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_31"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/nfs/permissions": {
      "get": {
        "tags": [
          "NFS"
        ],
        "summary": "Get NFS permissions",
        "operationId": "getNfsPermissions",
        "parameters": [
          {
            "name": "fs_uid",
            "in": "query",
            "description": "File system uid",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NFS"
        ],
        "summary": "Add NFS permission",
        "operationId": "addNfsPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_29"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_33"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/nfs/permissions/{uid}": {
      "get": {
        "tags": [
          "NFS"
        ],
        "summary": "Get NFS permission",
        "operationId": "getNfsPermission",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Permission uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_33"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NFS"
        ],
        "summary": "Update NFS permission",
        "operationId": "updateNfsPermission",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Permission uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_30"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NFS"
        ],
        "summary": "Remove NFS permission",
        "operationId": "deleteNfsPermission",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Permission uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Default \"/\"",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/nfs/clientGroups": {
      "get": {
        "tags": [
          "NFS"
        ],
        "summary": "Get all nfs client groups",
        "operationId": "getClientGroups",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_34"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NFS"
        ],
        "summary": "Create nfs client group",
        "operationId": "createClientGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_31"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_35"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/nfs/clientGroups/{uid}": {
      "get": {
        "tags": [
          "NFS"
        ],
        "summary": "Get nfs client group",
        "operationId": "getClientGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_36"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NFS"
        ],
        "summary": "Delete nfs client group",
        "operationId": "deleteClientGroup",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/nfs/clientGroups/{uid}/rules": {
      "post": {
        "tags": [
          "NFS"
        ],
        "summary": "create rule for nfs client group",
        "operationId": "addClientGroupRule",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/nfs/clientGroups/{uid}/rules/{rule_uid}": {
      "delete": {
        "tags": [
          "NFS"
        ],
        "summary": "Delete rule for nfs client group",
        "operationId": "deleteClientGroupRule",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "group uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rule_uid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/nodes": {
      "get": {
        "tags": [
          "Nodes"
        ],
        "summary": "Get all nodes",
        "operationId": "getNodes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_37"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/nodes/{uid}": {
      "get": {
        "tags": [
          "Nodes"
        ],
        "summary": "Get node",
        "operationId": "getNode",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Node uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/objectStoreBuckets": {
      "get": {
        "tags": [
          "Object store bucket"
        ],
        "summary": "Get all object store buckets",
        "operationId": "getAllObs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_38"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Object store bucket"
        ],
        "summary": "Create object store bucket",
        "operationId": "createObs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_33"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_39"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/objectStoreBuckets/{uid}": {
      "get": {
        "tags": [
          "Object store bucket"
        ],
        "summary": "Get object store bucket",
        "operationId": "getObs",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "object storage uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_39"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Object store bucket"
        ],
        "summary": "Update object store bucket",
        "operationId": "updateObs",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "object storage uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_34"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_39"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Object store bucket"
        ],
        "summary": "Delete object store bucket",
        "operationId": "deleteObs",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "object storage uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/objectStoreBuckets/{uid}/operations": {
      "get": {
        "tags": [
          "Object store bucket"
        ],
        "summary": "Get object store bucket operations",
        "operationId": "getObsOperations",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "object storage uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_40"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/objectStoreBuckets/pathStatus": {
      "get": {
        "tags": [
          "Object store bucket"
        ],
        "summary": "Get object store bucket path status",
        "operationId": "getObsPathStatus",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "Path in wekafs",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "wekafs://default/path/goader/00/06/00000263.txt"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/multipleOrgsExist": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get if multiple Organizations Exist",
        "operationId": "getMultipleOrgExist",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_42"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get all organizations",
        "operationId": "getOrganizations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_43"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create organization",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_35"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_44"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{uid}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get organization",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "organization uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_44"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "update organization",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "organization uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_36"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_44"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete organization",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "organization uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{uid}/limits": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Set organization capacity limits",
        "operationId": "setOrganizationLimit",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "organization uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_37"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_44"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/quota": {
      "get": {
        "tags": [
          "Quota"
        ],
        "summary": "Get file system quota",
        "operationId": "getQuota",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Quota type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "directory"
          },
          {
            "name": "fs_uid",
            "in": "query",
            "description": "File system uid",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "uid_string"
          },
          {
            "name": "next_token",
            "in": "query",
            "description": "Token to get the next page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_45"
                }
              }
            }
          }
        }
      }
    },
    "/smb": {
      "get": {
        "tags": [
          "SMB"
        ],
        "summary": "Get smb cluster info",
        "operationId": "getSamba",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_46"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SMB"
        ],
        "summary": "Update smb cluster info",
        "operationId": "updateSamba",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_38"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMB"
        ],
        "summary": "Set smb cluster info",
        "operationId": "setSamba",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_39"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SMB"
        ],
        "summary": "Clear smb cluster info",
        "operationId": "clearSamba",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/smb/domains": {
      "get": {
        "tags": [
          "SMB"
        ],
        "summary": "Get smb trusted domains",
        "operationId": "setSambaDomains",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_47"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMB"
        ],
        "summary": "Add trusted domain to smb",
        "operationId": "addSambaDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_40"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_48"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/smb/mount": {
      "get": {
        "tags": [
          "SMB"
        ],
        "summary": "Get smb mount options",
        "operationId": "setSambaMountOptions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_49"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/smb/shares": {
      "get": {
        "tags": [
          "SMB"
        ],
        "summary": "Get smb shares",
        "operationId": "setSambaShares",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_50"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMB"
        ],
        "summary": "add share to smb",
        "operationId": "addShareToSamba",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_41"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_51"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/smb/activeDirectory": {
      "put": {
        "tags": [
          "SMB"
        ],
        "summary": "Leave smb active directory",
        "operationId": "deleteSambaActiveDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_42"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_52"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMB"
        ],
        "summary": "Join smb active directory",
        "operationId": "setSambaActiveDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_43"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/smb/debug": {
      "post": {
        "tags": [
          "SMB"
        ],
        "summary": "Set smb debug level",
        "operationId": "setSambaDebug",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_44"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/smb/shares/{uid}": {
      "put": {
        "tags": [
          "SMB"
        ],
        "summary": "Update smb share",
        "operationId": "updateSambaShare",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "share uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_45"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_51"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SMB"
        ],
        "summary": "Delete smb share",
        "operationId": "deleteSambaShare",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Share uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/smb/domains/{uid}": {
      "delete": {
        "tags": [
          "SMB"
        ],
        "summary": "Delete smb domain",
        "operationId": "deleteSambaDomain",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Domain uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/smb/users/{share_uid}/{user_type}": {
      "post": {
        "tags": [
          "SMB"
        ],
        "summary": "Add user to smb",
        "operationId": "addUserToSamba",
        "parameters": [
          {
            "name": "share_uid",
            "in": "path",
            "description": "Share uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_type",
            "in": "path",
            "description": "read_only, read_write, valid, invalid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_46"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/smb/users/reset/{share_uid}/{user_type}": {
      "delete": {
        "tags": [
          "SMB"
        ],
        "summary": "Reset smb users",
        "operationId": "resetSambaUsers",
        "parameters": [
          {
            "name": "share_uid",
            "in": "path",
            "description": "Share uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_type",
            "in": "path",
            "description": "read_only, read_write, valid, invalid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/smb/users/{share_uid}/{user_type}/{user}": {
      "delete": {
        "tags": [
          "SMB"
        ],
        "summary": "Delete smb user",
        "operationId": "deleteSambaUser",
        "parameters": [
          {
            "name": "share_uid",
            "in": "path",
            "description": "Share uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_type",
            "in": "path",
            "description": "read_only, read_write, valid, invalid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/security/tokensExpiry": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Get tokens default expiry time",
        "operationId": "getTokensExpiry",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_53"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/snapshots": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Get snapshots",
        "operationId": "getSnapshots",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_54"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Create snapshot",
        "operationId": "createSnapshot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_47"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_55"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/snapshots/{uid}": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Get snapshot",
        "operationId": "getSnapshot",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Snapshot uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_55"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Update snapshot",
        "operationId": "updateSnapshot",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "snapshot uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_48"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_55"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Delete snapshot",
        "operationId": "deleteSnapshot",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Snapshot uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/snapshots/{uid}/copy": {
      "post": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Copy snapshot from the same file system",
        "operationId": "copySnapshot",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Snapshot uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_49"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_55"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/snapshots/{uid}/upload": {
      "post": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Upload snapshot to object store",
        "operationId": "uploadSnapshot",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "snapshot uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_56"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/snapshots/{fs_uid}/{uid}/restore": {
      "post": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Restore file system from snapshot",
        "operationId": "restoreFileSystemFromSnapshot",
        "parameters": [
          {
            "name": "fs_uid",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "snapshot uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_55"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats",
        "operationId": "getStats",
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "array of categories",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "stat",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "resolution_secs",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accumulated",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "per_node",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "node_uids",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "param",
            "in": "query",
            "required": false,
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/param"
            }
          },
          {
            "name": "no_zeroes",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_internal",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_57"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/stats/description": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats description",
        "operationId": "getStatsDescription",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_58"
                }
              }
            }
          }
        }
      }
    },
    "/stats/realtime": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get real time stats",
        "operationId": "getRealTimeStats",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_59"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/stats/retention": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get stats retention and estimated disk usage",
        "operationId": "getStatsDiskUsage",
        "parameters": [
          {
            "name": "retention_duration",
            "in": "query",
            "description": "Duration (format - 1 minute 2 seconds, options - weeks, days, hours, minutes, seconds)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1 day"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_60"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stats"
        ],
        "summary": "Set stats retention",
        "operationId": "getStatsRetention",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_50"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_60"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/io/start": {
      "post": {
        "tags": [
          "System IO"
        ],
        "summary": "Start system IO",
        "operationId": "startIO",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_61"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/io/stop": {
      "post": {
        "tags": [
          "System IO"
        ],
        "summary": "Stop system IO",
        "operationId": "stopIO",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_51"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_62"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all cluster tasks",
        "operationId": "getTasks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_63"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{uid}/resume": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Resume task",
        "operationId": "resumeTask",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Task uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{uid}/pause": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Pause task",
        "operationId": "pauseTasks",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "Task uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/limits": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get cluster tasks limit",
        "operationId": "getTasksLimit",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Set cluster tasks limit",
        "operationId": "setTasksLimit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_52"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/tls": {
      "get": {
        "tags": [
          "TLS"
        ],
        "summary": "Get TLS status",
        "operationId": "getTls",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_65"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TLS"
        ],
        "summary": "Enable TLS",
        "operationId": "enableTls",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_53"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TLS"
        ],
        "summary": "Disable tls",
        "operationId": "disableTls",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_66"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_54"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_67"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/users/{uid}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_55"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_67"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user password",
        "operationId": "updateUserPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body_56"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/users/whoami": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user info",
        "operationId": "whoAmI",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_68"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          }
        }
      }
    },
    "/users/{uid}/revoke": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Revoke user tokens",
        "operationId": "revokeUser",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "User uid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "fileSystem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "FSId<2>"
          },
          "auto_max_files": {
            "type": "boolean",
            "example": false
          },
          "used_ssd_data": {
            "type": "number",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "fs1"
          },
          "uid": {
            "type": "string",
            "example": "245"
          },
          "is_removing": {
            "type": "boolean",
            "example": false
          },
          "group_id": {
            "type": "string",
            "example": "FSGroupId<0>"
          },
          "is_creating": {
            "type": "boolean",
            "example": true
          },
          "free_total": {
            "type": "number",
            "example": 1073737728
          },
          "is_encrypted": {
            "type": "boolean",
            "example": true
          },
          "metadata_budget": {
            "type": "number",
            "example": 4202496
          },
          "used_total_data": {
            "type": "number",
            "example": 0
          },
          "used_total": {
            "type": "number",
            "example": 4096
          },
          "ssd_budget": {
            "type": "number",
            "example": 1073741824
          },
          "is_ready": {
            "type": "boolean",
            "example": false
          },
          "group_name": {
            "type": "string",
            "example": "default"
          },
          "available_total": {
            "type": "number",
            "example": 1073741824
          },
          "status": {
            "type": "string",
            "example": "CREATING"
          },
          "used_ssd_metadata": {
            "type": "number",
            "example": 4096
          },
          "auth_required": {
            "type": "boolean",
            "example": true
          },
          "available_ssd_metadata": {
            "type": "number",
            "example": 4202496
          },
          "total_budget": {
            "type": "number",
            "example": 1073741824
          },
          "used_ssd": {
            "type": "number",
            "example": 4096
          },
          "object_storages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fileSystem_object_storages"
            }
          },
          "available_ssd": {
            "type": "number",
            "example": 1073741824
          },
          "free_ssd": {
            "type": "number",
            "example": 1073737728
          }
        }
      },
      "alert": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "AdminDefaultPassword"
          },
          "muted": {
            "type": "boolean",
            "example": true
          },
          "fmt": {
            "type": "string",
            "example": "The admin password is still set to factory default, it should to be changed to ensure only authorized users can access the cluster"
          },
          "action": {
            "type": "string",
            "example": "Change the admin user password to using 'weka user passwd' to ensure only authorized users can access the cluster"
          },
          "title": {
            "type": "string",
            "example": "Default Password In Use"
          },
          "params": {
            "type": "object"
          }
        }
      },
      "defaultNet": {
        "type": "object",
        "properties": {
          "range": {
            "type": "string",
            "description": "IP range (format - A.B.C.D-E.F.G.H or A.B.C.D-F.G.H or A.B.C.D-G.H or A.B.C.D-H)",
            "example": "1.1.1.1-1.1.1.254"
          },
          "gateway": {
            "type": "string",
            "description": "Default gateway IP",
            "example": "255.255.255.255"
          },
          "netmask": {
            "type": "number",
            "description": "Subnet mask bits (0..32)",
            "example": 0
          }
        }
      },
      "drive": {
        "type": "object",
        "properties": {
          "added_time": {
            "type": "string",
            "example": "2021-03-07T07:28:48.46952Z"
          },
          "attachment": {
            "type": "string",
            "example": "OK"
          },
          "block_size": {
            "type": "number",
            "example": 512
          },
          "device_path": {
            "type": "string",
            "example": "0000:00:1e.0"
          },
          "failure_domain": {
            "type": "string",
            "example": "FailureDomainId<1>"
          },
          "failure_domain_name": {
            "type": "string",
            "example": "DOM-005"
          },
          "firmware": {
            "type": "string",
            "example": "0"
          },
          "host_id": {
            "type": "string",
            "example": "HostId<5>"
          },
          "hostname": {
            "type": "string",
            "example": "s731-5"
          },
          "id": {
            "type": "string",
            "example": "DiskId<0>"
          },
          "model": {
            "type": "string",
            "example": "Amazon EC2 NVMe Instance Storage"
          },
          "node_id": {
            "type": "string",
            "example": "NodeId<101>"
          },
          "percentage_used": {
            "type": "string",
            "example": "0"
          },
          "removed_time": {
            "type": "string",
            "example": "2021-03-07T09:28:48.46952Z"
          },
          "serial_number": {
            "type": "string",
            "example": "AWS66292A9B076E48A38"
          },
          "should_be_active": {
            "type": "boolean",
            "example": true
          },
          "size_bytes": {
            "type": "number",
            "example": 474998934528
          },
          "spares_remaining": {
            "type": "number",
            "example": 100
          },
          "spares_threshold": {
            "type": "number",
            "example": 0
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "uid": {
            "type": "string",
            "example": "137"
          },
          "uuid": {
            "type": "string",
            "example": "11d0c5f9-7b68-4d81-be41-2025c8368913"
          },
          "vendor": {
            "type": "string",
            "example": "AMAZON"
          }
        }
      },
      "failureDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "DOM-001"
          },
          "uid": {
            "type": "string",
            "example": "uid_string"
          },
          "drives": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "DiskId<2>"
            }
          },
          "hosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "host": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "HostId<0>"
          },
          "mode": {
            "type": "string",
            "example": "backend"
          },
          "failure_domain_id": {
            "type": "string",
            "example": "FailureDomainId<1>"
          },
          "bandwidth": {
            "type": "number",
            "example": 6497
          },
          "failure_domain": {
            "type": "string",
            "example": "DOM-000"
          },
          "added_time": {
            "type": "string",
            "example": "2021-03-10T09:47:14.835443Z"
          },
          "uid": {
            "type": "string",
            "example": "uid_string"
          },
          "drives_dedicated_cores": {
            "type": "number",
            "example": 0
          },
          "hostname": {
            "type": "string",
            "example": "exam-0"
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "172.31.17.71"
            }
          },
          "member_of_leadership": {
            "type": "boolean",
            "example": true
          },
          "io_nodes": {
            "type": "number",
            "example": 1
          },
          "last_failure_time": {
            "type": "string",
            "example": "2021-03-10T09:47:04.927107Z"
          },
          "state": {
            "type": "string",
            "example": "ACTIVE"
          },
          "start_time": {
            "type": "string",
            "example": "2021-03-10T09:47:05.563549Z"
          },
          "aws": {
            "$ref": "#/components/schemas/host_aws"
          },
          "sw_version": {
            "type": "string",
            "example": "3.11.1.6928"
          },
          "os_info": {
            "$ref": "#/components/schemas/host_os_info"
          },
          "last_failure_code": {
            "type": "string",
            "example": "ApplyingResources"
          },
          "cores_ids": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 1
            }
          },
          "memory": {
            "type": "number",
            "example": 1493172224
          },
          "frontend_dedicated_cores": {
            "type": "number",
            "example": 0
          },
          "failure_domain_type": {
            "type": "string",
            "example": "USER"
          },
          "leadership_role": {
            "type": "string",
            "example": "member"
          },
          "state_changed_time": {
            "type": "string",
            "example": "2021-03-10T09:47:04.927107Z"
          },
          "status": {
            "type": "string",
            "example": "UP"
          },
          "cores": {
            "type": "number",
            "example": 1
          },
          "host_ip": {
            "type": "string",
            "example": "172.31.17.71"
          },
          "is_dedicated": {
            "type": "boolean",
            "example": false
          },
          "last_failure": {
            "type": "string",
            "example": "Applying resources on container"
          },
          "mgmt_port": {
            "type": "number",
            "example": 14000
          },
          "auto_remove_timeout": {
            "type": "number",
            "example": 100
          }
        }
      },
      "interfaceGroup": {
        "type": "object",
        "properties": {
          "subnet_mask": {
            "type": "string",
            "example": "255.0.0.0"
          },
          "ports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interfaceGroup_ports"
            }
          },
          "name": {
            "type": "string",
            "example": "DefaultInterfaceGroup"
          },
          "uid": {
            "type": "string",
            "example": "uid_string"
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "168.32.0.0"
            }
          },
          "allow_manage_gids": {
            "type": "boolean",
            "example": false
          },
          "type": {
            "type": "string",
            "example": "NFS"
          },
          "gateway": {
            "type": "string",
            "example": "172.31.0.0"
          },
          "status": {
            "type": "string",
            "example": "OK"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "example": "uid_string"
          },
          "org_id": {
            "type": "number",
            "example": 0
          },
          "source": {
            "type": "string",
            "example": "Internal"
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "role": {
            "type": "string",
            "example": "ClusterAdmin"
          }
        }
      },
      "event": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "example": "Filesystem"
          },
          "cloud_digested_ts": {
            "type": "string",
            "example": "2021-03-11T08:48:52.020804Z"
          },
          "cloud_id": {
            "type": "string",
            "example": "91b5d073-2e3f-febe-b731-ad43d021ae45"
          },
          "entity": {
            "type": "string",
            "example": "ClusterAdmin internal user (admin from 172.31.41.19)"
          },
          "guid": {
            "type": "string",
            "example": "23caf2eb-246e-4743-b6f1-ebcc70672b07"
          },
          "hash": {
            "type": "number",
            "example": 0
          },
          "is_backend": {
            "type": "boolean",
            "example": true
          },
          "nid": {
            "type": "string",
            "example": "NodeId<40>"
          },
          "org_id": {
            "type": "string",
            "example": "OrgId<1>"
          },
          "params": {
            "$ref": "#/components/schemas/event_params"
          },
          "permission": {
            "type": "string",
            "example": "USER"
          },
          "processed": {
            "type": "boolean",
            "example": true
          },
          "s3_time": {
            "type": "string",
            "example": "2021-03-11T08:48:52.020804Z"
          },
          "severity": {
            "type": "string",
            "example": "INFO"
          },
          "sqs_message_time": {
            "type": "string",
            "example": "2021-03-11T08:48:52.020804Z"
          },
          "timestamp": {
            "type": "string",
            "example": "2021-03-11T08:48:47.570754Z"
          },
          "type": {
            "type": "string",
            "example": "FilesystemAdded"
          }
        }
      },
      "eventDescription": {
        "type": "object",
        "properties": {
          "dedup_parameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "username"
            }
          },
          "severity": {
            "type": "string",
            "example": "INFO"
          },
          "is_dedup_event": {
            "type": "boolean",
            "example": false
          },
          "permission": {
            "type": "string",
            "example": "User"
          },
          "category": {
            "type": "string",
            "example": "User"
          },
          "type": {
            "type": "string",
            "example": "UserLoginFailed"
          },
          "description": {
            "type": "string",
            "example": "User login failed"
          },
          "formatString": {
            "type": "string",
            "example": "`{username}` failed logging-in: {reason}"
          }
        }
      },
      "hostResource": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/hostResource_data"
          }
        }
      },
      "netdev": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "NetDevId<3>"
          },
          "id_type": {
            "type": "string",
            "example": "INVALID"
          },
          "netmask_bits": {
            "type": "number",
            "example": 20
          },
          "owner_nodes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "NodeId<1>"
            }
          },
          "name": {
            "type": "string",
            "example": "0000:00:04.0"
          },
          "uid": {
            "type": "string",
            "example": "uid_str"
          },
          "hostname": {
            "type": "string",
            "example": "stewie-0"
          },
          "net_devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/netdev_net_devices"
            }
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "172.31.12.149"
            }
          },
          "max_cores": {
            "type": "number",
            "example": 1
          },
          "vlan_id": {
            "type": "string",
            "example": "some_id"
          },
          "gateway": {
            "type": "string",
            "example": "172.31.0.1"
          },
          "host_id": {
            "type": "string",
            "example": "HostId<0>"
          },
          "identifier": {
            "type": "string",
            "example": "0000:00:04.0"
          },
          "network_label": {
            "type": "string",
            "example": "label"
          }
        }
      },
      "tokens": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "access_token_string"
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "number",
            "example": 3000
          },
          "refresh_token": {
            "type": "string",
            "example": "refresh_token_string"
          }
        }
      },
      "nfsPermission": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "string",
            "example": "NfsClientGroupId<0>"
          },
          "privileged_port": {
            "type": "boolean",
            "example": false
          },
          "id": {
            "type": "string",
            "example": "NfsExportId<0>"
          },
          "obs_direct": {
            "type": "boolean",
            "example": false
          },
          "anon_uid": {
            "type": "string",
            "example": "65534"
          },
          "manage_gids": {
            "type": "boolean",
            "example": false
          },
          "custom_options": {
            "type": "string",
            "example": ""
          },
          "filesystem": {
            "type": "string",
            "example": "fs_1"
          },
          "uid": {
            "type": "string",
            "example": "315"
          },
          "group": {
            "type": "string",
            "example": "DefaultClientGroup"
          },
          "filesystem_id": {
            "type": "string",
            "example": "FSId<1>"
          },
          "permission_type": {
            "type": "string",
            "example": "RW"
          },
          "path": {
            "type": "string",
            "example": "/1"
          },
          "root_squashing": {
            "type": "boolean",
            "example": true
          },
          "anon_gid": {
            "type": "string",
            "example": "65534"
          }
        }
      },
      "clientGroup": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "example": "242"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/clientGroup_rules"
            }
          },
          "id": {
            "type": "string",
            "example": "NfsClientGroupId<0>"
          },
          "name": {
            "type": "string",
            "example": "DefaultClientGroup"
          }
        }
      },
      "node": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "NodeId<121>"
          },
          "dpdk_port_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/node_dpdk_port_info"
            }
          },
          "network_mode": {
            "type": "string",
            "example": "DPDK"
          },
          "mode": {
            "type": "string",
            "example": "backend"
          },
          "lowest_node_path_issue": {
            "type": "string",
            "example": "NodeId<INVALID>"
          },
          "last_fencing_reason": {
            "type": "string",
            "example": "INVALID"
          },
          "uid": {
            "type": "string",
            "example": "115"
          },
          "hostname": {
            "type": "string",
            "example": "s1431-6"
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "172.31.32.228"
            }
          },
          "slot": {
            "type": "number",
            "example": 1
          },
          "is_blacklisted": {
            "type": "boolean",
            "example": false
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "FRONTEND"
            }
          },
          "missing_links": {
            "type": "string",
            "example": "some_links"
          },
          "cpu_is_dedicated": {
            "type": "boolean",
            "example": true
          },
          "cpu_core_id": {
            "type": "number",
            "example": 0
          },
          "host_id": {
            "type": "string",
            "example": "HostId<6>"
          },
          "cpu_numa_node": {
            "type": "number",
            "example": 0
          },
          "cpu_socket_id": {
            "type": "number",
            "example": 0
          },
          "memory": {
            "type": "number",
            "example": 1493172224
          },
          "up_since": {
            "type": "string",
            "example": "2021-03-14T08:13:45.695386Z"
          },
          "trace_history_in_seconds": {
            "type": "number",
            "example": 2786
          },
          "leadership_role": {
            "type": "string",
            "example": "role"
          },
          "last_fencing_time": {
            "type": "string",
            "example": "2021-03-14T08:13:45.695386Z"
          },
          "status": {
            "type": "string",
            "example": "UP"
          },
          "cpu_model": {
            "type": "string",
            "example": "Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz"
          },
          "dpdk_ip": {
            "type": "string",
            "example": "172.31.32.228"
          },
          "dataplane_transfer_mode": {
            "type": "string",
            "example": "mode"
          },
          "dpdk_socket_info": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "info"
            }
          },
          "last_join_reject_reason": {
            "type": "string",
            "example": "NONE"
          },
          "is_dpdk": {
            "type": "boolean",
            "example": true
          },
          "cpu_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "objectStoreBucket": {
        "type": "object",
        "properties": {
          "status_remove": {
            "type": "string",
            "example": "UP"
          },
          "id": {
            "type": "string",
            "example": "ObjectStorageId<1>"
          },
          "secret_key": {
            "type": "string",
            "example": "**********"
          },
          "errors_timeout": {
            "type": "number",
            "example": 60
          },
          "bandwidth": {
            "$ref": "#/components/schemas/objectStoreBucket_bandwidth"
          },
          "name": {
            "type": "string",
            "example": "OBS_1"
          },
          "prefetch_mib": {
            "type": "number",
            "example": 10
          },
          "uid": {
            "type": "string",
            "example": "302"
          },
          "hostname": {
            "type": "string",
            "example": "s3.eu-west-1.amazonaws.com"
          },
          "unknown_nodes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "NodeId<61>"
            }
          },
          "unknown_count": {
            "type": "number",
            "example": 0
          },
          "up_nodes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "NodeId<100>"
            }
          },
          "up_count": {
            "type": "number",
            "example": 14
          },
          "down_count": {
            "type": "number",
            "example": 0
          },
          "max_concurrent_uploads": {
            "type": "number",
            "example": 10
          },
          "auth_method": {
            "type": "string",
            "example": "AWSSignature4"
          },
          "status_upload": {
            "type": "string",
            "example": "UP"
          },
          "max_concurrent_removals": {
            "type": "number",
            "example": 10
          },
          "max_extents_in_data_blob": {
            "type": "number",
            "example": 10
          },
          "max_blocks_in_data_blob": {
            "type": "number",
            "example": 10
          },
          "uploadBandwidth": {
            "$ref": "#/components/schemas/objectStoreBucket_uploadBandwidth"
          },
          "up_since": {
            "type": "string",
            "example": "2021-03-09T08:56:27.923664Z"
          },
          "access_key_id": {
            "type": "string",
            "example": "AKIA32X4U5TENMEYBPJE"
          },
          "last_errors": {
            "type": "string",
            "example": "last error"
          },
          "port": {
            "type": "number",
            "example": 80
          },
          "status_download": {
            "type": "string",
            "example": "UP"
          },
          "bucket": {
            "type": "string",
            "example": "eu-west-1-aws.weka.io.def-oo-test/obs_1"
          },
          "status": {
            "type": "string",
            "example": "UP"
          },
          "max_concurrent_downloads": {
            "type": "number",
            "example": 10
          },
          "region": {
            "type": "string",
            "example": "eu-west-1"
          },
          "protocol": {
            "type": "string",
            "example": "HTTP"
          },
          "down_nodes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "NodeId<60>"
            }
          }
        }
      },
      "organization": {
        "type": "object",
        "properties": {
          "total_quota": {
            "type": "number",
            "example": 20000002048
          },
          "id": {
            "type": "number",
            "example": 1
          },
          "ssd_quota": {
            "type": "number",
            "example": 10000003072
          },
          "ssd_allocated": {
            "type": "number",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "ORG-1"
          },
          "total_allocated": {
            "type": "number",
            "example": 0
          },
          "uid": {
            "type": "string",
            "example": "uid_string"
          }
        }
      },
      "smbDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "SambaTrustedDomainId<0>"
          },
          "uid": {
            "type": "string",
            "example": "uid_string"
          },
          "idmapBackend": {
            "type": "string",
            "example": "rfc2307"
          },
          "mappingFromId": {
            "type": "number",
            "example": 4291000001
          },
          "mappingToId": {
            "type": "number",
            "example": 4294967294
          },
          "domainName": {
            "type": "string",
            "example": "ad.company.com"
          }
        }
      },
      "smbShare": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "SambaShareId<0>"
          },
          "innerPath": {
            "type": "string",
            "example": "/"
          },
          "fileCreateMask": {
            "type": "string",
            "example": "0744"
          },
          "mountOptions": {
            "type": "string",
            "example": "writecache"
          },
          "readWriteUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "wekadmin"
            }
          },
          "readOnly": {
            "type": "boolean",
            "example": true
          },
          "validUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "username"
            }
          },
          "invalidUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "username2"
            }
          },
          "hidden": {
            "type": "boolean",
            "example": false
          },
          "shareName": {
            "type": "string",
            "example": "share-1"
          },
          "readOnlyUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "username3"
            }
          },
          "encryption": {
            "type": "string",
            "example": "cluster_default"
          },
          "uid": {
            "type": "string",
            "example": "435"
          },
          "acl": {
            "type": "boolean",
            "example": true
          },
          "additionalShareOptions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "string"
            }
          },
          "directoryCreateMask": {
            "type": "string",
            "example": "0755"
          },
          "description": {
            "type": "string",
            "example": "some description"
          },
          "obsDirect": {
            "type": "boolean",
            "example": true
          },
          "allowGuestAccess": {
            "type": "boolean",
            "example": false
          },
          "fsName": {
            "type": "string",
            "example": "default"
          }
        }
      },
      "snapshot": {
        "type": "object",
        "properties": {
          "isWritable": {
            "type": "boolean",
            "example": true
          },
          "filesystemId": {
            "type": "string",
            "example": "FSId<0>"
          },
          "locator": {
            "type": "string",
            "example": ""
          },
          "isRemoving": {
            "type": "boolean",
            "example": false
          },
          "name": {
            "type": "string",
            "example": "snap111"
          },
          "progress": {
            "type": "number",
            "example": -1
          },
          "uid": {
            "type": "string",
            "example": "U475"
          },
          "accessPoint": {
            "type": "string",
            "example": "11111"
          },
          "stowStatus": {
            "type": "string",
            "example": "NONE"
          },
          "multiObs": {
            "type": "boolean",
            "example": false
          },
          "type": {
            "type": "string",
            "example": "FILESYSTEM"
          },
          "creationTime": {
            "type": "string",
            "example": "2021-03-16T13:42:47Z"
          },
          "id": {
            "type": "string",
            "example": "SnapViewId<12>"
          }
        }
      },
      "body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "server_uri": {
            "type": "string",
            "description": "LDAP server URI ([ldap://]hostname[:port] or ldaps://hostname[:port])",
            "example": "ad.comapny.com"
          },
          "start_tls": {
            "type": "boolean",
            "description": "Issue StartTLS after connecting (should not be used with ldaps://)",
            "example": false
          },
          "ignore_start_tls_failure": {
            "type": "boolean",
            "description": "Ignore start TLS failure",
            "example": false
          },
          "server_timeout_secs": {
            "type": "number",
            "description": "LDAP connection timeout in seconds",
            "example": 30
          },
          "domain": {
            "type": "string",
            "description": "Domain",
            "example": "ad.comapny.com"
          },
          "reader_username": {
            "type": "string",
            "description": "Reader username",
            "example": "read_admin"
          },
          "reader_password": {
            "type": "string",
            "description": "Reader password",
            "example": "read_pass"
          },
          "role_groups": {
            "type": "object",
            "description": "user role can be ClusterAdmin, OrgAdmin, ReadOnly or Regular",
            "example": {
              "ClusterAdmin": "Enterprise admins",
              "OrgAdmin": "",
              "Regular": "WekaGroup",
              "ReadOnly": "TestGroup"
            }
          }
        }
      },
      "inline_response_200": {
        "properties": {
          "data": {}
        }
      },
      "inline_response_400": {
        "properties": {
          "message": {
            "type": "string",
            "example": "error message"
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_400_data"
          }
        }
      },
      "inline_response_401": {
        "properties": {
          "data": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alert"
            }
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "example": [
              "ClusterIsUpgrading",
              "DataProtection",
              "NodeDisconnected",
              "NodeTieringConnectivity",
              "DriveDown",
              "DriveEndurancePercentageUsed",
              "DriveEnduranceSparesRemaining",
              "DriveNeedsPhaseout",
              "DriveScanError",
              "JumboConnectivity",
              "BucketHasNoQuorum",
              "BucketUnresponsive",
              "HangingIos",
              "NotEnoughActiveDrives",
              "PartiallyConnectedNode",
              "NodeNetworkUnstable",
              "NetworkInterfaceLinkDown",
              "BondInterfaceCompromised",
              "IPConflictDetected",
              "ChokingDetected",
              "PerformanceDegradedLowRAM",
              "ApproachingClientsUnavailability",
              "ClockSkew",
              "AgentNotRunning",
              "OfedVersions",
              "DedicatedWatchdog",
              "BackendNumaBalancingEnabled",
              "ClientNumaBalancingEnabled",
              "CloudHealth",
              "AdminDefaultPassword",
              "NoClusterLicense",
              "LicenseError",
              "HighDrivesCapacity",
              "NegativeUnprovisionedCapacity",
              "FilesystemHasTooManyFiles",
              "MismatchedDriveFailureDomain",
              "KMSError",
              "AutoRemoveTimeoutTooLow",
              "NodeBlacklisted",
              "UdpModePerformanceWarning",
              "ResourcesNotApplied",
              "PartialConnectivityTrackingDisabled",
              "TLSCertificateExpiresSoon",
              "TLSCertificateExpired",
              "ClusterInitializationError",
              "TracesDisabled",
              "ManualOverridesActive",
              "NodeRDMANotActive"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_3_data"
            }
          }
        }
      },
      "body_1": {
        "required": [
          "duration"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "description": "Mute duration in milliseconds",
            "default": 604800
          }
        }
      },
      "inline_response_200_4": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_4_data"
          }
        }
      },
      "inline_response_200_5": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_5_data"
          }
        }
      },
      "inline_response_200_6": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_6_data"
          }
        }
      },
      "body_2": {
        "required": [
          "proxy"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "type": "string",
            "description": "HTTP proxy used to connect to cloud services"
          }
        }
      },
      "inline_response_200_7": {
        "properties": {
          "data": {
            "type": "number",
            "description": "Maximum uploaded bytes per second",
            "example": 1048576
          }
        }
      },
      "body_3": {
        "required": [
          "bytes_per_second"
        ],
        "type": "object",
        "properties": {
          "bytes_per_second": {
            "type": "number",
            "description": "Maximum uploaded bytes per second"
          }
        }
      },
      "inline_response_200_8": {
        "properties": {
          "data": {
            "type": "string",
            "example": "https://some_cloud.com"
          }
        }
      },
      "body_4": {
        "type": "object",
        "properties": {
          "cloud_url": {
            "type": "string",
            "description": "The base url of the cloud service"
          },
          "enable_cloud_stats": {
            "type": "boolean",
            "description": "Enable or disable uploading stats to the cloud"
          }
        }
      },
      "inline_response_200_9": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_9_data"
          }
        }
      },
      "body_5": {
        "type": "object",
        "properties": {
          "cluster_name": {
            "type": "string",
            "description": "Cluster name",
            "example": "new_name"
          },
          "data_drives": {
            "type": "number",
            "description": "Number of RAID data drives",
            "example": 5
          },
          "parity_drives": {
            "type": "number",
            "description": "Number of RAID protection parity drives",
            "example": 2
          },
          "scrubber_bytes_per_sec": {
            "type": "number",
            "description": "Rate of RAID scrubbing in units per second (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 100000000
          },
          "hotspare_failure_domains": {
            "type": "number",
            "example": 2
          }
        }
      },
      "inline_response_200_10": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_10_data"
          }
        }
      },
      "inline_response_200_11": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/drive"
            }
          }
        }
      },
      "body_6": {
        "required": [
          "device_path",
          "host_id"
        ],
        "type": "object",
        "properties": {
          "host_uid": {
            "type": "string",
            "description": "The host the drive attached to",
            "example": "uid_string"
          },
          "device_path": {
            "type": "string",
            "description": "Device path of the drives to add",
            "example": "/dev/nvme0n1"
          },
          "force": {
            "type": "boolean",
            "description": "Force formatting the drive, avoiding all safety checks!",
            "example": true
          },
          "allow_format_non_wekafs_drives": {
            "type": "boolean",
            "description": "Allow reuse of drives formatted by another versions",
            "example": true
          }
        }
      },
      "inline_response_200_12": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/drive"
          }
        }
      },
      "inline_response_404": {
        "properties": {
          "message": {
            "type": "string",
            "example": "error message"
          }
        }
      },
      "body_7": {
        "type": "object",
        "properties": {
          "drive_uids": {
            "type": "array",
            "description": "A list of drive or UUIDs to activate. If no UID is supplied, all inactive drives will be activated",
            "items": {
              "type": "string",
              "example": "uid_string"
            }
          }
        }
      },
      "body_8": {
        "type": "object",
        "properties": {
          "drive_uids": {
            "type": "array",
            "description": "A list of drive UIDs to deactivate",
            "items": {
              "type": "string",
              "example": "uid_string"
            }
          }
        }
      },
      "inline_response_200_13": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "next_token": {
            "type": "string",
            "example": "91b5d073-2e3f-febe-b731-ad43d021ae45"
          }
        }
      },
      "inline_response_200_14": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/eventDescription"
            }
          }
        }
      },
      "inline_response_200_15": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_15_data"
            }
          },
          "next_token": {
            "type": "string",
            "example": "2021-03-21T08:24:01.561Z"
          }
        }
      },
      "inline_response_200_16": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/failureDomain"
            }
          }
        }
      },
      "inline_response_200_17": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/failureDomain"
          }
        }
      },
      "inline_response_200_18": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fileSystem"
            }
          }
        }
      },
      "body_9": {
        "required": [
          "group_name",
          "name",
          "total_capacity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Filesystem name",
            "example": "fs1"
          },
          "group_name": {
            "type": "string",
            "description": "Group name",
            "example": "default"
          },
          "total_capacity": {
            "type": "number",
            "description": "Total capacity (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 1073741824
          },
          "obs_name": {
            "type": "string",
            "description": "Object store name. Mandatory for tiered filesystems",
            "example": "OBS_1"
          },
          "ssd_capacity": {
            "type": "number",
            "description": "SSD capacity (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 1073741824
          },
          "encrypted": {
            "type": "boolean",
            "description": "Creates an encrypted filesystem",
            "example": true
          },
          "auth_required": {
            "type": "boolean",
            "description": "Require the mounting user to be authenticated for mounting this filesystem. This flag is only effective in the root organization, users in non-root organizations must be authenticated to perform a mount operation",
            "example": true
          },
          "allow_no_kms": {
            "type": "boolean",
            "description": "Allow (insecurely) creating an encrypted filesystem without a KMS configured",
            "example": true
          }
        }
      },
      "inline_response_200_19": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/fileSystem"
          }
        }
      },
      "body_10": {
        "type": "object",
        "properties": {
          "new_name": {
            "type": "string",
            "description": "New name",
            "example": "newFs"
          },
          "total_capacity": {
            "type": "number",
            "description": "Total capacity (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 1073741824
          },
          "ssd_capacity": {
            "type": "number",
            "description": "SSD capacity (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 1073741824
          },
          "auth_required": {
            "type": "boolean",
            "description": "Require the mounting user to be authenticated for mounting this filesystem. This flag is only effective in the root organization, users in non-root organizations must be authenticated to perform a mount operation",
            "example": true
          }
        }
      },
      "body_11": {
        "required": [
          "obs_name"
        ],
        "type": "object",
        "properties": {
          "obs_name": {
            "type": "string",
            "description": "Name of the Object Store to attach",
            "example": "obs1"
          },
          "obs_mode": {
            "type": "string",
            "description": "The operation mode for the OBS",
            "enum": [
              "READ_ONLY",
              "WRITABLE"
            ]
          }
        }
      },
      "inline_response_200_20": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Detach task id",
            "example": "CWTaskId<278>"
          }
        }
      },
      "body_12": {
        "required": [
          "group_name",
          "locator",
          "name",
          "object_storage",
          "ssd_capacity",
          "total_capacity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "New file system name",
            "example": "new_fs"
          },
          "group_name": {
            "type": "string",
            "description": "Group name",
            "example": "default"
          },
          "total_capacity": {
            "type": "number",
            "description": "Total capacity (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 10000000000
          },
          "object_storage": {
            "type": "string",
            "description": "Object Store name",
            "example": "obs1"
          },
          "locator": {
            "type": "string",
            "description": "Locator",
            "example": "bba696fb/d/s/4/spec/fc35-4d51-96b6-028488d349dc"
          },
          "ssd_capacity": {
            "type": "number",
            "description": "SSD capacity (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 10000000000
          },
          "auth_required": {
            "type": "boolean",
            "description": "Require the mounting user to be authenticated for mounting this filesystem. This flag is only effective in the root organization, users in non-root organizations must be authenticated to perform a mount operation",
            "example": true
          }
        }
      },
      "inline_response_200_21": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/host"
            }
          }
        }
      },
      "body_13": {
        "required": [
          "hostname"
        ],
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Management network hostname",
            "example": "hostname-6"
          },
          "ip": {
            "type": "string",
            "description": "Management IP; If empty, the hostname is resolved; If host is highly-available or mixed-networking, use IP set '<ip>+<ip>+...+<ip>'",
            "example": "173.21.11.41"
          },
          "no_wait": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "inline_response_200_22": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/host"
          }
        }
      },
      "body_14": {
        "type": "object",
        "properties": {
          "failure_domain_type": {
            "type": "string",
            "description": "A failure domain type",
            "enum": [
              "AUTO",
              "USER",
              "HA"
            ]
          },
          "failure_domain": {
            "type": "string",
            "description": "Set the host failure domain"
          },
          "cores": {
            "type": "number",
            "description": "Dedicate host's cores to weka",
            "example": 1
          },
          "frontend_dedicated_cores": {
            "type": "number",
            "description": "Frontend dedicate cores",
            "example": 1
          },
          "drives_dedicated_cores": {
            "type": "number",
            "description": "Drives dedicate cores",
            "example": 0
          },
          "cores_ids_type": {
            "type": "string",
            "description": "A core id type",
            "enum": [
              "AUTO",
              "USER"
            ]
          },
          "memory": {
            "type": "number",
            "description": "Dedicate a set amount of RAM to weka",
            "example": 100
          },
          "dedicated": {
            "type": "boolean",
            "description": "Set the host as dedicated to weka. For example it can be rebooted whenever needed, and configured by weka for optimal performance and stability",
            "example": true
          },
          "bandwidth": {
            "type": "number",
            "description": "Limit weka's bandwidth for the host",
            "example": 1000
          },
          "auto_remove_timeout": {
            "type": "number",
            "description": "Set how long to wait before removing this host if it disconnects from the cluster (for clients only)"
          },
          "management_ips": {
            "type": "array",
            "description": "Set the host's management node IPs. Setting 2 IPs will turn this hosts networking into highly-available mode",
            "items": {
              "type": "string",
              "example": "173.21.11.41"
            }
          },
          "apply_host": {
            "type": "boolean",
            "description": "Apply the host after this change",
            "example": false
          }
        }
      },
      "body_15": {
        "required": [
          "host_uids"
        ],
        "type": "object",
        "properties": {
          "host_uids": {
            "type": "array",
            "description": "Host uids to apply",
            "items": {
              "type": "string",
              "example": "uid_string"
            }
          }
        }
      },
      "inline_response_200_23": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/hostResource"
          }
        }
      },
      "body_16": {
        "required": [
          "host_uids"
        ],
        "type": "object",
        "properties": {
          "host_uids": {
            "type": "array",
            "description": "Host uids to activate",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "body_17": {
        "required": [
          "host_uids"
        ],
        "type": "object",
        "properties": {
          "host_uids": {
            "type": "array",
            "description": "Host uids to deactivate",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "inline_response_200_24": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/netdev"
            }
          }
        }
      },
      "body_18": {
        "type": "object",
        "properties": {
          "device": {
            "type": "string",
            "description": "Network device pci-slot/mac-address/interface-name(s)",
            "example": "eth1"
          },
          "ips_type": {
            "type": "string",
            "description": "POOL - IPs from the default data networking IP pool would be used, USER - configured by the user",
            "enum": [
              "POOL",
              "USER"
            ]
          },
          "ips": {
            "type": "array",
            "description": "IPs to be allocated to cores using the device. If not given - IPs may be set automatically according the interface's IPs, or taken from the default networking IPs pool (format - A.B.C.D-E.F.G.H or A.B.C.D-F.G.H or A.B.C.D-G.H or A.B.C.D-H)",
            "items": {
              "type": "string",
              "example": "172.31.4.107"
            }
          },
          "gateway": {
            "type": "string",
            "description": "Default gateway IP. In AWS this value is auto-detected, otherwise the default data networking gateway will be used",
            "example": "172.31.0.1"
          },
          "netmask": {
            "type": "number",
            "description": "Netmask in bits number. In AWS this value is auto-detected, otherwise the default data networking netmask will be used",
            "example": 20
          },
          "name": {
            "type": "string",
            "description": "If empty, a name will be auto generated",
            "example": "netdev01"
          },
          "apply_host": {
            "type": "boolean",
            "description": "Apply the host after this change",
            "example": false
          }
        }
      },
      "inline_response_200_25": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interfaceGroup"
            }
          }
        }
      },
      "body_19": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Interface group name",
            "example": "default"
          },
          "type": {
            "type": "string",
            "description": "Group type. cli subnet type can be NFS",
            "example": "nfs"
          },
          "subnet": {
            "type": "string",
            "description": "Subnet mask in the 255.255.0.0 format",
            "example": "255.0.0.0"
          },
          "gateway": {
            "type": "string",
            "description": "Gateway ip",
            "example": "172.31.0.0"
          }
        }
      },
      "inline_response_200_26": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/interfaceGroup"
          }
        }
      },
      "body_20": {
        "type": "object",
        "properties": {
          "subnet": {
            "type": "string",
            "description": "Subnet mask in the 255.255.0.0 format",
            "example": "255.0.0.0"
          },
          "gateway": {
            "type": "string",
            "description": "Gateway ip",
            "example": "172.31.0.0"
          }
        }
      },
      "body_21": {
        "required": [
          "ips"
        ],
        "type": "object",
        "properties": {
          "ips": {
            "type": "string",
            "description": "IP range (format - A.B.C.D-E.F.G.H or A.B.C.D-F.G.H or A.B.C.D-G.H or A.B.C.D-H)",
            "example": "10.222.8.19"
          }
        }
      },
      "body_22": {
        "required": [
          "port"
        ],
        "type": "object",
        "properties": {
          "port": {
            "type": "string",
            "description": "Port's device. (e.g. eth1)",
            "example": "eth0"
          }
        }
      },
      "inline_response_200_27": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_27_data"
          }
        }
      },
      "body_23": {
        "type": "object",
        "properties": {
          "base_url": {
            "type": "string",
            "example": "https://compney.com:4000"
          },
          "master_key_name": {
            "type": "string",
            "example": "cluster_key"
          },
          "token": {
            "type": "string",
            "example": "s.token_string"
          },
          "server_endpoint": {
            "type": "string"
          },
          "key_uid": {
            "type": "string"
          },
          "client_cert_pem": {
            "type": "string"
          },
          "client_key_pem": {
            "type": "string"
          },
          "ca_cert_pem": {
            "type": "string"
          }
        }
      },
      "inline_response_200_28": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "HashiCorpVault"
          }
        }
      },
      "body_24": {
        "type": "object",
        "properties": {
          "new_key_uid": {
            "type": "string",
            "description": "(KMIP-only) Unique identifier for the new key to be used to wrap filesystem keys"
          }
        }
      },
      "inline_response_200_29": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_29_data"
          }
        }
      },
      "ldap_role_groups": {
        "type": "object",
        "properties": {
          "ClusterAdmin": {
            "type": "string",
            "example": "Enterprise admins"
          },
          "OrgAdmin": {
            "type": "string",
            "example": ""
          },
          "Regular": {
            "type": "string",
            "example": "WekaGroup"
          },
          "ReadOnly": {
            "type": "string",
            "example": "TestGroup"
          }
        }
      },
      "body_25": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "server_uri": {
            "type": "string",
            "description": "LDAP server URI ([ldap://]hostname[:port] or ldaps://hostname[:port])",
            "example": "ad.company.io"
          },
          "start_tls": {
            "type": "boolean",
            "description": "Issue StartTLS after connecting (should not be used with ldaps://)",
            "example": true
          },
          "ignore_start_tls_failure": {
            "type": "boolean",
            "description": "Ignore start TLS failure",
            "example": true
          },
          "server_timeout_secs": {
            "type": "number",
            "description": "LDAP connection timeout in seconds",
            "example": 10
          },
          "protocol_version": {
            "type": "number",
            "description": "LDAP protocol version",
            "example": 3
          },
          "base_dn": {
            "type": "string",
            "description": "Base DN",
            "example": "DC=ad,DC=company,DC=io"
          },
          "user_object_class": {
            "type": "string",
            "description": "User object class",
            "example": "user"
          },
          "user_id_attribute": {
            "type": "string",
            "description": "User ID attribute",
            "example": "sAMAccountName"
          },
          "user_revocation_attribute": {
            "type": "string",
            "description": "User revocation attribute - If provided, updating this attribute in the LDAP server automatically revokes all user tokens",
            "example": ""
          },
          "group_object_class": {
            "type": "string",
            "description": "Group object class",
            "example": "group"
          },
          "group_membership_attribute": {
            "type": "string",
            "description": "Group membership attribute",
            "example": "member"
          },
          "group_id_attribute": {
            "type": "string",
            "description": "Group ID attribute",
            "example": "cn"
          },
          "reader_username": {
            "type": "string",
            "description": "Reader username",
            "example": "user@ad.io"
          },
          "reader_password": {
            "type": "string",
            "description": "Reader password",
            "example": "pass.io"
          },
          "role_groups": {
            "$ref": "#/components/schemas/ldap_role_groups"
          }
        }
      },
      "inline_response_200_30": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_30_data"
          }
        }
      },
      "body_26": {
        "type": "object",
        "properties": {
          "license": {
            "type": "string",
            "description": "The new license to set to the system - classic",
            "example": "license_string"
          },
          "plan_id": {
            "type": "string",
            "description": "Plan id - PAYG",
            "example": "plan_string"
          },
          "secret_key": {
            "type": "string",
            "description": "Secret key - PAYG",
            "example": "key_string"
          },
          "url": {
            "type": "string",
            "description": "Url to license server - PAYG",
            "example": "https://get.weka.io"
          }
        }
      },
      "body_27": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User's username",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password123"
          },
          "org": {
            "type": "string",
            "description": "Organization name, default 'Root'",
            "example": "root"
          }
        }
      },
      "inline_response_200_31": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tokens"
            }
          }
        }
      },
      "body_28": {
        "required": [
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string",
            "description": "Refresh token",
            "example": "refresh_token_string"
          }
        }
      },
      "inline_response_200_32": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nfsPermission"
            }
          }
        }
      },
      "body_29": {
        "required": [
          "filesystem",
          "group"
        ],
        "type": "object",
        "properties": {
          "filesystem": {
            "type": "string",
            "description": "File system name",
            "example": "fs_2"
          },
          "group": {
            "type": "string",
            "description": "Client group name",
            "example": "DefaultClientGroup"
          },
          "path": {
            "type": "string",
            "description": "path [default -  /]",
            "example": "/"
          },
          "permission_type": {
            "type": "string",
            "description": "Permission type",
            "enum": [
              "RO",
              "RW"
            ]
          },
          "root_squashing": {
            "type": "boolean",
            "description": "Root squashing",
            "example": true
          },
          "anon_uid": {
            "type": "number",
            "description": "Anonymous UID to be used instead of root when root squashing is enabled",
            "example": 10
          },
          "anon_gid": {
            "type": "number",
            "description": "Anonymous GID to be used instead of root when root squashing is enabled",
            "example": 10
          },
          "obs_direct": {
            "type": "boolean",
            "description": "Obs direct",
            "example": true
          }
        }
      },
      "inline_response_200_33": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/nfsPermission"
          }
        }
      },
      "body_30": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "path [default -  /]",
            "example": "/"
          },
          "permission_type": {
            "type": "string",
            "description": "Permission type",
            "enum": [
              "RO",
              "RW"
            ]
          },
          "root_squashing": {
            "type": "boolean",
            "description": "Root squashing",
            "example": true
          },
          "anon_uid": {
            "type": "number",
            "description": "Anonymous UID to be used instead of root when root squashing is enabled",
            "example": 10
          },
          "anon_gid": {
            "type": "number",
            "description": "Anonymous GID to be used instead of root when root squashing is enabled",
            "example": 10
          },
          "obs_direct": {
            "type": "boolean",
            "description": "Obs direct",
            "example": true
          }
        }
      },
      "inline_response_200_34": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/clientGroup"
            }
          }
        }
      },
      "body_31": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Group name",
            "example": "group_name"
          }
        }
      },
      "inline_response_200_35": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_35_data"
          }
        }
      },
      "inline_response_200_36": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/clientGroup"
          }
        }
      },
      "body_32": {
        "type": "object",
        "properties": {
          "dns": {
            "type": "string",
            "description": "DNS rule with *?[] wildcards rule",
            "example": "new-dns"
          },
          "ip": {
            "type": "string",
            "description": "IP with netmask rule, in the 1.1.1.1/255.255.0.0 format",
            "example": "123.10.10.0"
          }
        }
      },
      "inline_response_200_37": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/node"
            }
          }
        }
      },
      "inline_response_200_38": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/objectStoreBucket"
            }
          }
        }
      },
      "body_33": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Object Store",
            "example": "OBS_1"
          },
          "protocol": {
            "type": "string",
            "description": "One of - HTTP (default), HTTPS, HTTPS_UNVERIFIED",
            "enum": [
              "HTTP",
              "HTTPS",
              "HTTPS_UNVERIFIED"
            ]
          },
          "hostname": {
            "type": "string",
            "description": "Hostname (or IP) of the entrypoint to the object store",
            "example": "s3.eu-west-1.amazonaws.com"
          },
          "port": {
            "type": "number",
            "description": "Port of the entrypoint to S3 (single Accesser or Load-Balancer)",
            "example": 80
          },
          "bucket": {
            "type": "string",
            "description": "Name of the bucket we are assigned to work with",
            "example": "eu-west-1-aws.company.def-oo-test/obs_1"
          },
          "auth_method": {
            "type": "string",
            "description": "Authentication method S3AuthMethod can be None, AWSSignature2 or AWSSignature4",
            "enum": [
              "None",
              "AWSSignature2",
              "AWSSignature4"
            ]
          },
          "region": {
            "type": "string",
            "description": "Name of the region we are assigned to work with (usually empty)",
            "example": "eu-west-1"
          },
          "access_key_id": {
            "type": "string",
            "description": "Access Key ID for AWS Signature authentications",
            "example": "some_key"
          },
          "secret_key": {
            "type": "string",
            "description": "Secret Key for AWS Signature authentications",
            "example": "some_secret_key"
          },
          "dry_run": {
            "type": "boolean",
            "description": "Only test the command, don't affect the system",
            "example": false
          },
          "skip_verification": {
            "type": "boolean",
            "description": "Don't verify the connection to the given store"
          },
          "bandwidth": {
            "type": "number",
            "description": "Bandwidth limitation per core (Mbps)",
            "example": 1000
          },
          "verbose_errors": {
            "type": "boolean",
            "description": "Dump HTTP info on error"
          },
          "errors_timeout": {
            "type": "string",
            "description": "If the OBS link is down for longer than this, all IOs that need data return with an error (format - duration between 1 minute and 15 minutes)",
            "example": "1 minute"
          },
          "prefetch_mib": {
            "type": "number",
            "description": "How many MiB of data to prefetch when reading a whole MiB on object store (format - 0..600)",
            "example": 10
          },
          "max_concurrent_downloads": {
            "type": "number",
            "description": "Maximum number of downloads we concurrently perform on this object store in a single IO node (format - 1..64)",
            "example": 10
          },
          "max_concurrent_uploads": {
            "type": "number",
            "description": "Maximum number of uploads we concurrently perform on this object store in a single IO node (format - 1..64)",
            "example": 10
          },
          "max_concurrent_removals": {
            "type": "number",
            "description": "Maximum number of removals we concurrently perform on this object store in a single IO node (format -  1..64)",
            "example": 10
          },
          "max_extents_in_data_blob": {
            "type": "number",
            "description": "Maximum number of extents data to upload to an object store data blob",
            "example": 10
          },
          "max_blocks_in_data_blob": {
            "type": "number",
            "description": "Maximum size to upload to an object store data blob (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 10
          }
        }
      },
      "inline_response_200_39": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/objectStoreBucket"
          }
        }
      },
      "body_34": {
        "type": "object",
        "properties": {
          "new_name": {
            "type": "string",
            "description": "Name of the Object Store",
            "example": "OBS_1"
          },
          "protocol": {
            "type": "string",
            "description": "One of - HTTP (default), HTTPS, HTTPS_UNVERIFIED",
            "enum": [
              "HTTP",
              "HTTPS",
              "HTTPS_UNVERIFIED"
            ]
          },
          "hostname": {
            "type": "string",
            "description": "Hostname (or IP) of the entrypoint to the object store",
            "example": "s3.eu-west-1.amazonaws.com"
          },
          "port": {
            "type": "number",
            "description": "Port of the entrypoint to S3 (single Accesser or Load-Balancer)",
            "example": 80
          },
          "bucket": {
            "type": "string",
            "description": "Name of the bucket we are assigned to work with",
            "example": "eu-west-1-aws.company.def-oo-test/obs_1"
          },
          "auth_method": {
            "type": "string",
            "description": "Authentication method S3AuthMethod can be None, AWSSignature2 or AWSSignature4",
            "enum": [
              "None",
              "AWSSignature2",
              "AWSSignature4"
            ]
          },
          "region": {
            "type": "string",
            "description": "Name of the region we are assigned to work with (usually empty)",
            "example": "eu-west-1"
          },
          "access_key_id": {
            "type": "string",
            "description": "Access Key ID for AWS Signature authentications",
            "example": "some_key"
          },
          "secret_key": {
            "type": "string",
            "description": "Secret Key for AWS Signature authentications",
            "example": "some_secret_key"
          },
          "dry_run": {
            "type": "boolean",
            "description": "Only test the command, don't affect the system",
            "example": false
          },
          "skip_verification": {
            "type": "boolean",
            "description": "Don't verify the connection to the given store"
          },
          "bandwidth": {
            "type": "number",
            "description": "Bandwidth limitation per core (Mbps)",
            "example": 1000
          },
          "verbose_errors": {
            "type": "boolean",
            "description": "Dump HTTP info on error"
          },
          "errors_timeout": {
            "type": "string",
            "description": "If the OBS link is down for longer than this, all IOs that need data return with an error (format - duration between 1 minute and 15 minutes)",
            "example": "1 minute"
          },
          "prefetch_mib": {
            "type": "number",
            "description": "How many MiB of data to prefetch when reading a whole MiB on object store (format - 0..600)",
            "example": 10
          },
          "max_concurrent_downloads": {
            "type": "number",
            "description": "Maximum number of downloads we concurrently perform on this object store in a single IO node (format - 1..64)",
            "example": 10
          },
          "max_concurrent_uploads": {
            "type": "number",
            "description": "Maximum number of uploads we concurrently perform on this object store in a single IO node (format - 1..64)",
            "example": 10
          },
          "max_concurrent_removals": {
            "type": "number",
            "description": "Maximum number of removals we concurrently perform on this object store in a single IO node (format -  1..64)",
            "example": 10
          },
          "max_extents_in_data_blob": {
            "type": "number",
            "description": "Maximum number of extents data to upload to an object store data blob",
            "example": 10
          },
          "max_blocks_in_data_blob": {
            "type": "number",
            "description": "Maximum size to upload to an object store data blob (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 10
          }
        }
      },
      "inline_response_200_40": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_40_data"
          }
        }
      },
      "inline_response_200_41": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_41_data"
          }
        }
      },
      "inline_response_200_42": {
        "type": "object",
        "properties": {
          "data": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "inline_response_200_43": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/organization"
            }
          }
        }
      },
      "body_35": {
        "required": [
          "name",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Organization name",
            "example": "ORG-1"
          },
          "username": {
            "type": "string",
            "description": "Username of organization admin",
            "example": "org1-user"
          },
          "password": {
            "type": "string",
            "description": "Password of organization admin",
            "example": "Org1User"
          },
          "ssd_quota": {
            "type": "number",
            "description": "SSD quota (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 10000000000
          },
          "total_quota": {
            "type": "number",
            "description": "Total quota (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 20000000000
          }
        }
      },
      "inline_response_200_44": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/organization"
          }
        }
      },
      "body_36": {
        "type": "object",
        "properties": {
          "new_name": {
            "type": "string",
            "description": "Organization new name",
            "example": "ORG-2"
          }
        }
      },
      "body_37": {
        "type": "object",
        "properties": {
          "ssd_quota": {
            "type": "number",
            "description": "SSD quota (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 10000000000
          },
          "total_quota": {
            "type": "number",
            "description": "Total quota (format - capacity in decimal or binary units - 11B, 1KB, 1MB, 1GB, 1TB, 1PB, 1EB, 1KiB, 1MiB, 1GiB, 1TiB, 1PiB, 1EiB)",
            "example": 20000000000
          }
        }
      },
      "inline_response_200_45": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_45_data"
          },
          "next_token": {
            "type": "number",
            "example": 3214121
          }
        }
      },
      "inline_response_200_46": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_46_data"
          }
        }
      },
      "body_38": {
        "type": "object",
        "properties": {
          "encryption": {
            "type": "string",
            "description": "Samba cluster encryption",
            "enum": [
              "enabled",
              "disabled",
              "desired",
              "required"
            ]
          }
        }
      },
      "body_39": {
        "required": [
          "domain",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Domain name",
            "example": "companySMB"
          },
          "samba_hosts": {
            "type": "array",
            "description": "The hosts that will serve via the SMB protocol (pass weka's host uid)",
            "items": {
              "type": "string",
              "example": "uid_string"
            }
          },
          "domain": {
            "type": "string",
            "description": "The domain to join the SMB cluster to",
            "example": "ad.company.com"
          },
          "samba_ips": {
            "type": "array",
            "description": "IPs used as floating IPs for samba to server SMB in a HA manner. Then should not be assigned to any host on the network (format - A.B.C.D-E.F.G.H or A.B.C.D-F.G.H or A.B.C.D-G.H or A.B.C.D-H)",
            "items": {
              "type": "string",
              "example": "172.68.34.23"
            }
          },
          "domain_netbios_name": {
            "type": "string",
            "description": "The domain netbios name; If not given, the default will be the first part of the given domain name",
            "example": "ad"
          },
          "idmap_backend": {
            "type": "string",
            "description": "The samba domain backend type (rid, rfc2307, etc.). Note that rfc2307 requires uid/gid configuration on the Active Directory and is persistent, while rid does not require any Active Directory configuration but in case of range changes",
            "example": "rfc2307"
          },
          "default_domain_mapping_from_id": {
            "type": "number",
            "description": "The samba default domain first id",
            "example": 4290000001
          },
          "default_domain_mapping_to_id": {
            "type": "number",
            "description": "The samba default domain last id",
            "example": 4291000000
          },
          "joined_domain_mapping_from_id": {
            "type": "number",
            "description": "The joined domain first id",
            "example": 0
          },
          "joined_domain_mapping_to_id": {
            "type": "number",
            "description": "The joined domain last id",
            "example": 4290000000
          },
          "encryption": {
            "type": "string",
            "description": "Samba cluster encryption",
            "enum": [
              "enabled",
              "disabled",
              "desired",
              "required"
            ]
          }
        }
      },
      "inline_response_200_47": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smbDomain"
            }
          }
        }
      },
      "body_40": {
        "required": [
          "domain_name",
          "mapping_from_id",
          "mapping_to_id"
        ],
        "type": "object",
        "properties": {
          "domain_name": {
            "type": "string",
            "description": "The name of the domain being added",
            "example": "ad.company.com"
          },
          "mapping_from_id": {
            "type": "number",
            "description": "The first id",
            "example": 4291000001
          },
          "mapping_to_id": {
            "type": "number",
            "description": "The last id",
            "example": 4294967294
          }
        }
      },
      "inline_response_200_48": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/smbDomain"
          }
        }
      },
      "inline_response_200_49": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "example": [
              "coherent",
              "readcache",
              "writecache"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "inline_response_200_50": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smbShare"
            }
          }
        }
      },
      "body_41": {
        "required": [
          "fs_name",
          "share_name"
        ],
        "type": "object",
        "properties": {
          "share_name": {
            "type": "string",
            "description": "The name of the share being added",
            "example": "share-1"
          },
          "fs_name": {
            "type": "string",
            "description": "Filesystem name to share",
            "example": "default"
          },
          "description": {
            "type": "string",
            "description": "A description for samba to show regarding the share",
            "example": "some description"
          },
          "sub_path": {
            "type": "string",
            "description": "The path inside the filesystem to share",
            "example": "/"
          },
          "mount_options": {
            "type": "string",
            "description": "Option to pass to the mount command when mounting weka. NOTE - This parameter is DANGEROUS, use with caution. Incorrect usage may lead to DATA LOSS",
            "example": "writecache"
          },
          "file_create_mask": {
            "type": "string",
            "description": "POSIX mode mask files will be created with. E.g. \"0744\"",
            "example": "484"
          },
          "directory_create_mask": {
            "type": "string",
            "description": "POSIX mode mask directories will be created with. E.g. \"0755\"",
            "example": "493"
          },
          "acl": {
            "type": "boolean",
            "description": "Enable Windows ACLs on the share. Will also be translated (as possible) to POSIX ACL"
          },
          "obs_direct": {
            "type": "boolean",
            "description": "Mount samba in obs-direct mode"
          },
          "encryption": {
            "type": "string",
            "description": "Samba share encryption",
            "enum": [
              "cluster_default",
              "desired",
              "required"
            ]
          },
          "read_only": {
            "type": "boolean",
            "description": "Mount samba as read-only"
          },
          "user_list_type": {
            "type": "string",
            "example": "read_write"
          },
          "users": {
            "type": "array",
            "description": "The list type to which users are added to",
            "items": {
              "type": "string"
            },
            "enum": [
              "read_only",
              "read_write",
              "valid",
              "invalid"
            ]
          },
          "additional_share_options": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "string"
            }
          }
        }
      },
      "inline_response_200_51": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/smbShare"
          }
        }
      },
      "body_42": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The name of the administrator user to join the domain using it",
            "example": "smbUsername"
          },
          "password": {
            "type": "string",
            "description": "The administrator user password",
            "example": "smbPassword"
          },
          "debug_mode": {
            "type": "boolean",
            "description": "Run the command in debug mode"
          }
        }
      },
      "inline_response_200_52": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "Deleted account for 'WEKASMB' in realm 'AD.COMPANY>COM'\\n"
          }
        }
      },
      "body_43": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The name of the administrator user to join the domain using it"
          },
          "password": {
            "type": "string",
            "description": "The administrator user password"
          },
          "debug_mode": {
            "type": "boolean",
            "description": "Run the command in debug mode"
          },
          "server": {
            "type": "string",
            "description": "The domain controller server"
          },
          "create_computerOU": {
            "type": "string",
            "description": "Precreate the computer account in a specific OU"
          },
          "extra_options": {
            "type": "string"
          },
          "task_id": {
            "type": "string"
          },
          "asynchronous": {
            "type": "boolean"
          },
          "poll": {
            "type": "boolean"
          },
          "timeout": {
            "type": "string",
            "description": "Join command timeout in seconds (format - 3s, 2h, 4m, 1d, 1d5h, 1w, infinite/unlimited)"
          }
        }
      },
      "body_44": {
        "required": [
          "debug_level"
        ],
        "type": "object",
        "properties": {
          "debug_level": {
            "type": "number",
            "description": "The debug level (format - 0..10)",
            "example": 1
          },
          "samba_hosts": {
            "type": "array",
            "description": "Hosts to set debug level (pass host uid). All hosts as default",
            "items": {
              "type": "string",
              "example": "uid_string"
            }
          }
        }
      },
      "body_45": {
        "required": [
          "encryption"
        ],
        "type": "object",
        "properties": {
          "encryption": {
            "type": "string",
            "description": "Samba share encryption",
            "enum": [
              "cluster_default",
              "desired",
              "required"
            ]
          }
        }
      },
      "body_46": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "description": "Users to add",
            "items": {
              "type": "string",
              "example": "Enterprise Admins"
            }
          }
        }
      },
      "inline_response_200_53": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_53_data"
          }
        }
      },
      "inline_response_200_54": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshot"
            }
          }
        }
      },
      "body_47": {
        "required": [
          "access_point",
          "fs_uid",
          "name"
        ],
        "type": "object",
        "properties": {
          "fs_uid": {
            "type": "string",
            "description": "File system uid for creating the snapshot",
            "example": "uid_string"
          },
          "name": {
            "type": "string",
            "description": "Target Snapshot name",
            "example": "snap111"
          },
          "access_point": {
            "type": "string",
            "description": "Access point",
            "example": "11111"
          },
          "source_snap_uid": {
            "type": "string",
            "description": "Source snapshot uid for copy a snapshot",
            "example": "uid_string"
          },
          "is_writable": {
            "type": "boolean",
            "description": "Writable"
          }
        }
      },
      "inline_response_200_55": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/snapshot"
          }
        }
      },
      "body_48": {
        "type": "object",
        "properties": {
          "new_name": {
            "type": "string",
            "example": "snap111"
          },
          "access_point": {
            "type": "string",
            "example": "11111"
          },
          "is_writable": {
            "type": "boolean"
          }
        }
      },
      "body_49": {
        "type": "object",
        "properties": {
          "destination_name": {
            "type": "string",
            "description": "Destination snapshot name"
          }
        }
      },
      "inline_response_200_56": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_56_data"
          }
        }
      },
      "param": {
        "type": "object",
        "properties": {
          "<param_key>": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "inline_response_200_57": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_57_data"
          }
        }
      },
      "inline_response_200_58": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_58_data"
          }
        }
      },
      "inline_response_200_59": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_59_data"
            }
          }
        }
      },
      "inline_response_200_60": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_60_data"
          }
        }
      },
      "body_50": {
        "type": "object",
        "properties": {
          "retention_duration": {
            "type": "string",
            "description": "Duration (format - 1 minute 2 seconds, options - weeks, days, hours, minutes, seconds)"
          }
        }
      },
      "inline_response_200_61": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_61_data"
          }
        }
      },
      "body_51": {
        "type": "object",
        "properties": {
          "brutal_no_flush": {
            "type": "boolean",
            "description": "Force stopping IO services immediately without graceful flushing of ongoing operations. Using this flag may cause data-loss if used without explicit guidance from WekaIO customer support"
          }
        }
      },
      "inline_response_200_62": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_62_data"
          }
        }
      },
      "inline_response_200_63": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_63_data"
            }
          }
        }
      },
      "inline_response_200_64": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_64_data"
          }
        }
      },
      "body_52": {
        "type": "object",
        "properties": {
          "cpu_limit": {
            "type": "number",
            "description": "Percent of the CPU resources to dedicate to background tasks",
            "example": 50
          }
        }
      },
      "inline_response_200_65": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_65_data"
          }
        }
      },
      "body_53": {
        "required": [
          "tls_cert_pem",
          "tls_key_pem"
        ],
        "type": "object",
        "properties": {
          "tls_cert_pem": {
            "type": "string",
            "example": "-----BEGIN CERTIFICATE-----\\n<all_the_content_of_cert.pem_with_\\n>\\n-----END CERTIFICATE-----\""
          },
          "tls_key_pem": {
            "type": "string",
            "example": "-----BEGIN CERTIFICATE-----\\n<all_the_content_of_key.pem_with_\\n>\\n-----END CERTIFICATE-----\""
          }
        }
      },
      "inline_response_200_66": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "body_54": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username of the new user to create",
            "example": "user1"
          },
          "password": {
            "type": "string",
            "description": "Password for the new user - must contain at least 8 characters, and have at least one uppercase letter, one lowercase letter, and one number or special character. Typing special characters as arguments to this command might require escaping",
            "example": "StrongPass111"
          },
          "role": {
            "type": "string",
            "description": "The role of the new user",
            "enum": [
              "ClusterAdmin",
              "OrgAdmin",
              "ReadOnly",
              "Regular"
            ]
          }
        }
      },
      "inline_response_200_67": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "body_55": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of the new user",
            "enum": [
              "ClusterAdmin",
              "OrgAdmin",
              "ReadOnly",
              "Regular"
            ]
          }
        }
      },
      "body_56": {
        "required": [
          "new_password",
          "old_password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "some_username"
          },
          "old_password": {
            "type": "string",
            "description": "Old password",
            "example": "NewUser123"
          },
          "new_password": {
            "type": "string",
            "description": "New password",
            "example": "NewPass123"
          },
          "org": {
            "type": "string",
            "description": "Organization name, default 'Root'",
            "example": "root"
          }
        }
      },
      "inline_response_200_68": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_68_data"
          }
        }
      },
      "fileSystem_object_storages": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "example": "237"
          },
          "state": {
            "type": "number"
          },
          "obsId": {
            "type": "number"
          },
          "mode": {
            "type": "number"
          },
          "name": {
            "type": "number"
          }
        }
      },
      "host_aws": {
        "type": "object",
        "properties": {
          "instance_type": {
            "type": "string",
            "example": "i3.large"
          },
          "availability_zone": {
            "type": "string",
            "example": "eu-west-1a"
          },
          "instance_id": {
            "type": "string",
            "example": "i-0286561555bf9dcc5"
          }
        }
      },
      "host_os_info_drivers": {
        "type": "object",
        "properties": {
          "ixgbe": {
            "type": "string",
            "example": ""
          },
          "ixgbevf": {
            "type": "string",
            "example": ""
          },
          "mlx5_core": {
            "type": "string",
            "example": ""
          },
          "ib_uverbs": {
            "type": "string",
            "example": ""
          },
          "uio_pci_generic": {
            "type": "string",
            "example": "5f49bb7dc1b5d192fb01b442b17ddc0451313ea2"
          }
        }
      },
      "host_os_info": {
        "type": "object",
        "properties": {
          "kernel_name": {
            "type": "string",
            "example": "Linux"
          },
          "platform": {
            "type": "string",
            "example": "x86_64"
          },
          "kernel_version": {
            "type": "string",
            "example": "#1 SMP Mon Jul 29 17:46:05 UTC 2019"
          },
          "os_name": {
            "type": "string",
            "example": "GNU/Linux"
          },
          "kernel_release": {
            "type": "string",
            "example": "3.10.0-957.27.2.el7.x86_64"
          },
          "drivers": {
            "$ref": "#/components/schemas/host_os_info_drivers"
          }
        }
      },
      "interfaceGroup_ports": {
        "type": "object",
        "properties": {
          "host_uid": {
            "type": "string",
            "example": "uid_string"
          },
          "host_id": {
            "type": "string",
            "example": "HostId<0>"
          },
          "port": {
            "type": "string",
            "example": "eth0"
          },
          "status": {
            "type": "string",
            "example": "OK"
          }
        }
      },
      "event_params": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "default"
          },
          "parameters": {
            "type": "string",
            "example": "GroupName: default, TotalCapacity: 1829454741504, SSDCapacity: 1829454741504"
          }
        }
      },
      "hostResource_data_backend_endpoints": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "example": "172.31.13.97"
          },
          "port": {
            "type": "number",
            "example": 14000
          }
        }
      },
      "hostResource_data_nodes_0": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "MANAGEMENT"
            }
          },
          "core_id": {
            "type": "number",
            "example": 4294967295
          },
          "http_port": {
            "type": "number",
            "example": 14000
          },
          "dedicate_core": {
            "type": "boolean",
            "example": false
          },
          "rpc_port": {
            "type": "number",
            "example": 14010
          },
          "dedicated_mode": {
            "type": "string",
            "example": "FULL"
          }
        }
      },
      "hostResource_data_nodes_1": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "FRONTEND"
            }
          },
          "core_id": {
            "type": "number",
            "example": 4294967295
          },
          "http_port": {
            "type": "number",
            "example": 14000
          },
          "dedicate_core": {
            "type": "boolean",
            "example": true
          },
          "rpc_port": {
            "type": "number",
            "example": 14011
          },
          "dedicated_mode": {
            "type": "string",
            "example": "FULL"
          }
        }
      },
      "hostResource_data_nodes": {
        "type": "object",
        "properties": {
          "0": {
            "$ref": "#/components/schemas/hostResource_data_nodes_0"
          },
          "1": {
            "$ref": "#/components/schemas/hostResource_data_nodes_1"
          }
        }
      },
      "hostResource_data": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "example": "BACKEND"
          },
          "memory": {
            "type": "number",
            "example": 0
          },
          "format": {
            "type": "number",
            "example": 3
          },
          "bandwidth": {
            "type": "number",
            "example": 2000
          },
          "drives": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "some_drive"
            }
          },
          "failure_domain": {
            "type": "string",
            "example": ""
          },
          "hardware_watchdog": {
            "type": "boolean",
            "example": false
          },
          "wait_io_nodes_timeout": {
            "type": "number",
            "example": 300
          },
          "backend_endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/hostResource_data_backend_endpoints"
            }
          },
          "hostname": {
            "type": "string",
            "example": ""
          },
          "reserve_1g_hugepages": {
            "type": "boolean",
            "example": true
          },
          "net_devices": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "eth0"
            }
          },
          "dedicate_memory": {
            "type": "boolean",
            "example": true
          },
          "ips": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "172.31.11.41"
            }
          },
          "ui_enabled": {
            "type": "boolean",
            "example": true
          },
          "join_secret": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "secret"
            }
          },
          "nodes": {
            "$ref": "#/components/schemas/hostResource_data_nodes"
          },
          "host_id": {
            "type": "number",
            "example": 65535
          },
          "auto_remove_timeout": {
            "type": "number",
            "example": 0
          },
          "disable_numa_balancing": {
            "type": "boolean",
            "example": true
          },
          "mask_interrupts": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "netdev_aws": {
        "type": "object",
        "properties": {
          "netmask_bits": {
            "type": "number",
            "example": 20
          },
          "ip": {
            "type": "string",
            "example": "172.31.12.149"
          },
          "gateway": {
            "type": "string",
            "example": "172.31.0.1"
          }
        }
      },
      "netdev_net_devices": {
        "type": "object",
        "properties": {
          "mac_address": {
            "type": "string",
            "example": "02:5a:d7:de:50:5c"
          },
          "mtu": {
            "type": "number",
            "example": 0
          },
          "is_virtual": {
            "type": "boolean",
            "example": true
          },
          "interface_alias": {
            "type": "string",
            "example": "some alias "
          },
          "numa": {
            "type": "number",
            "example": -1
          },
          "aws": {
            "$ref": "#/components/schemas/netdev_aws"
          },
          "interface_name": {
            "type": "string",
            "example": "some name"
          },
          "max_vfs_num": {
            "type": "number",
            "example": 0
          },
          "vendor": {
            "type": "string",
            "example": "Amazon.com, Inc."
          },
          "slave_devices": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "some_devices"
            }
          },
          "pci_slot": {
            "type": "string",
            "example": "0000:00:04.0"
          },
          "device": {
            "type": "string",
            "example": "Elastic Network Adapter (ENA)"
          },
          "driver": {
            "type": "string",
            "example": "igb_uio"
          }
        }
      },
      "clientGroup_rules": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "IP"
          },
          "uid": {
            "type": "string",
            "example": "244"
          },
          "rule": {
            "type": "string",
            "example": "0.0.0.0/0.0.0.0"
          },
          "id": {
            "type": "string",
            "example": "NfsClientGroupRuleId<0>"
          }
        }
      },
      "node_dpdk_port_info": {
        "type": "object",
        "properties": {
          "num_peers": {
            "type": "number",
            "example": 13
          },
          "ip": {
            "type": "string",
            "example": "172.31.32.228"
          }
        }
      },
      "objectStoreBucket_bandwidth": {
        "type": "object",
        "properties": {
          "_mbps": {
            "type": "number",
            "example": 1000
          }
        }
      },
      "objectStoreBucket_uploadBandwidth": {
        "type": "object",
        "properties": {
          "_mbps": {
            "type": "number",
            "example": 4294967295
          }
        }
      },
      "inline_response_400_data": {
        "type": "object",
        "properties": {
          "missing_params": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "param1"
            }
          },
          "param": {
            "type": "string",
            "example": "param2"
          },
          "error": {
            "type": "string",
            "example": "param2 has an error"
          }
        }
      },
      "inline_response_200_3_data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "ExampleAlert"
          },
          "action": {
            "type": "string",
            "example": "Disable this alert by running the set_example_alert_off manhole"
          },
          "title": {
            "type": "string",
            "example": "Example Alert"
          }
        }
      },
      "inline_response_200_4_data_hosts_HostId0": {
        "type": "object",
        "properties": {
          "load": {
            "type": "number",
            "example": 0
          },
          "health": {
            "type": "string",
            "example": "READY"
          }
        }
      },
      "inline_response_200_4_data_hosts": {
        "type": "object",
        "properties": {
          "HostId<0>": {
            "$ref": "#/components/schemas/inline_response_200_4_data_hosts_HostId0"
          }
        }
      },
      "inline_response_200_4_data": {
        "type": "object",
        "properties": {
          "cloud_stats_enabled": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "isRegistered": {
            "type": "boolean",
            "example": true
          },
          "hosts": {
            "$ref": "#/components/schemas/inline_response_200_4_data_hosts"
          },
          "url": {
            "type": "string",
            "example": "https://company.com"
          }
        }
      },
      "inline_response_200_5_data": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "some_token"
          },
          "token_type": {
            "type": "string",
            "example": "some_type"
          }
        }
      },
      "inline_response_200_6_data": {
        "type": "object",
        "properties": {
          "proxy": {
            "type": "string",
            "example": "proxy.some"
          }
        }
      },
      "inline_response_200_9_data_overlay_client_nodes_safety_histogram": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "number",
            "example": 0
          },
          "parents": {
            "type": "number",
            "example": 3
          }
        }
      },
      "inline_response_200_9_data_overlay": {
        "type": "object",
        "properties": {
          "client_nodes_safety_histogram": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_9_data_overlay_client_nodes_safety_histogram"
            }
          },
          "branching_factor": {
            "type": "number",
            "example": 40
          },
          "clients_branching_factor": {
            "type": "number",
            "example": 100
          },
          "client_nodes_at_risk": {
            "type": "number",
            "example": 0
          },
          "client_nodes_not_supported": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_9_data_activity": {
        "type": "object",
        "properties": {
          "obs_upload_bytes_per_second": {
            "type": "number",
            "example": 0
          },
          "sum_bytes_read": {
            "type": "number",
            "example": 0
          },
          "num_writes": {
            "type": "number",
            "example": 0
          },
          "obs_download_bytes_per_second": {
            "type": "number",
            "example": 0
          },
          "sum_bytes_written": {
            "type": "number",
            "example": 0
          },
          "num_reads": {
            "type": "number",
            "example": 0
          },
          "num_ops": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_9_data_drives": {
        "type": "object",
        "properties": {
          "active": {
            "type": "number",
            "example": 7
          },
          "total": {
            "type": "number",
            "example": 7
          }
        }
      },
      "inline_response_200_9_data_cloud": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "healthy": {
            "type": "boolean",
            "example": true
          },
          "proxy": {
            "type": "string",
            "example": ""
          }
        }
      },
      "inline_response_200_9_data_rebuild_protectionState": {
        "type": "object",
        "properties": {
          "percent": {
            "type": "number",
            "example": 100
          },
          "numFailures": {
            "type": "number",
            "example": 0
          },
          "MiB": {
            "type": "number",
            "example": 403200
          }
        }
      },
      "inline_response_200_9_data_rebuild": {
        "type": "object",
        "properties": {
          "requiredFDsForRebuild": {
            "type": "number",
            "example": 4
          },
          "unavailablePercent": {
            "type": "number",
            "example": 0
          },
          "enoughActiveFDs": {
            "type": "boolean",
            "example": true
          },
          "totalCopiesMiB": {
            "type": "number",
            "example": 0
          },
          "unavailableMiB": {
            "type": "number",
            "example": 0
          },
          "progressPercent": {
            "type": "number",
            "example": 0
          },
          "stripeDisks": {
            "type": "number",
            "example": 7
          },
          "numActiveFDs": {
            "type": "number",
            "example": 7
          },
          "totalCopiesDoneMiB": {
            "type": "number",
            "example": 0
          },
          "protectionState": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_9_data_rebuild_protectionState"
            }
          }
        }
      },
      "inline_response_200_9_data_hosts_clients": {
        "type": "object",
        "properties": {
          "active": {
            "type": "number",
            "example": 0
          },
          "total": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_9_data_hosts": {
        "type": "object",
        "properties": {
          "total_count": {
            "type": "number",
            "example": 7
          },
          "backends": {
            "$ref": "#/components/schemas/inline_response_200_9_data_drives"
          },
          "active_count": {
            "type": "number",
            "example": 7
          },
          "clients": {
            "$ref": "#/components/schemas/inline_response_200_9_data_hosts_clients"
          }
        }
      },
      "inline_response_200_9_data_buckets_info_thinProvisionState_shrinkageFactor": {
        "type": "object",
        "properties": {
          "val": {
            "type": "number",
            "example": 4096
          }
        }
      },
      "inline_response_200_9_data_buckets_info_thinProvisionState": {
        "type": "object",
        "properties": {
          "usableWritable": {
            "type": "number",
            "example": 521109504
          },
          "totalSSDBudgets": {
            "type": "number",
            "example": 446644224
          },
          "shrinkageFactor": {
            "$ref": "#/components/schemas/inline_response_200_9_data_buckets_info_thinProvisionState_shrinkageFactor"
          }
        }
      },
      "inline_response_200_9_data_buckets_info": {
        "type": "object",
        "properties": {
          "averageFillLevelPPMMinSinceLastEvent": {
            "type": "number",
            "example": 0
          },
          "fillLevelAlertsPercent": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 95
            }
          },
          "thinProvisionState": {
            "$ref": "#/components/schemas/inline_response_200_9_data_buckets_info_thinProvisionState"
          },
          "averageFillLevelPPM": {
            "type": "number",
            "example": 5269
          },
          "shrunkAtGeneration": {
            "type": "string",
            "example": "ConfigGeneration<INVALID>"
          },
          "placementAllocationThresholdPPM": {
            "type": "number",
            "example": 450000
          },
          "maxPrefetchRPCs": {
            "type": "number",
            "example": 256
          }
        }
      },
      "inline_response_200_9_data_time": {
        "type": "object",
        "properties": {
          "cluster_time": {
            "type": "string",
            "example": "2021-03-10T09:52:14.5068161Z"
          },
          "allowed_clock_skew_secs": {
            "type": "number",
            "example": 60
          }
        }
      },
      "inline_response_200_9_data_net": {
        "type": "object",
        "properties": {
          "link_layer": {
            "type": "string",
            "example": "ETH"
          }
        }
      },
      "inline_response_200_9_data_buckets": {
        "type": "object",
        "properties": {
          "active": {
            "type": "number",
            "example": 105
          },
          "global_flush_generation": {
            "type": "number",
            "example": 1
          },
          "global_flush_status": {
            "type": "string",
            "example": "NONE"
          },
          "total": {
            "type": "number",
            "example": 105
          }
        }
      },
      "inline_response_200_9_data_capacity": {
        "type": "object",
        "properties": {
          "total_bytes": {
            "type": "number",
            "example": 1829454741504
          },
          "hot_spare_bytes": {
            "type": "number",
            "example": 305009786880
          },
          "unprovisioned_bytes": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_9_data_block_upgrade_task": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "INVALID"
          },
          "progress": {
            "type": "number",
            "example": 0
          },
          "taskId": {
            "type": "string",
            "example": "BlockTaskId<0>"
          },
          "state": {
            "type": "string",
            "example": "IDLE"
          }
        }
      },
      "inline_response_200_9_data_grim_reaper": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "is_cluster_fully_connected": {
            "type": "boolean",
            "example": true
          },
          "node_with_least_links": {
            "type": "string",
            "example": ""
          }
        }
      },
      "inline_response_200_9_data_hanging_ios": {
        "type": "object",
        "properties": {
          "event_driver_frontend_threshold_secs": {
            "type": "number",
            "example": 1800
          },
          "last_emitted_backend_no_longer_detected_event": {
            "type": "string",
            "example": ""
          },
          "alerts_threshold_secs": {
            "type": "number",
            "example": 900
          },
          "last_emitted_backend_event": {
            "type": "string",
            "example": ""
          },
          "event_backend_threshold_secs": {
            "type": "number",
            "example": 1800
          },
          "last_emitted_driver_frontend_no_longer_detected_event": {
            "type": "string",
            "example": ""
          },
          "last_emitted_driver_frontend_event": {
            "type": "string",
            "example": ""
          },
          "event_nfs_frontend_threshold_secs": {
            "type": "number",
            "example": 1800
          },
          "last_emitted_nfs_frontend_event": {
            "type": "string",
            "example": ""
          },
          "last_emitted_nfs_frontend_no_longer_detected_event": {
            "type": "string",
            "example": ""
          }
        }
      },
      "inline_response_200_9_data_nodes": {
        "type": "object",
        "properties": {
          "blacklisted": {
            "type": "number",
            "example": 0
          },
          "total": {
            "type": "number",
            "example": 14
          }
        }
      },
      "inline_response_200_9_data_licensing_usage": {
        "type": "object",
        "properties": {
          "drive_capacity_gb": {
            "type": "number",
            "example": 3324
          },
          "usable_capacity_gb": {
            "type": "number",
            "example": 1829
          },
          "obs_capacity_gb": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_9_data_licensing_limits": {
        "type": "object",
        "properties": {
          "drive_capacity_gb": {
            "type": "number",
            "example": 3324
          },
          "usable_capacity_gb": {
            "type": "number",
            "example": 18446744073709552000
          },
          "obs_capacity_gb": {
            "type": "number",
            "example": 1000000000000000
          },
          "valid_from": {
            "type": "string",
            "example": "2021-03-10T09:46:18Z"
          },
          "expires_at": {
            "type": "string",
            "example": "2021-04-09T09:46:18Z"
          }
        }
      },
      "inline_response_200_9_data_licensing": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "example": "Classic"
          },
          "usage": {
            "$ref": "#/components/schemas/inline_response_200_9_data_licensing_usage"
          },
          "license": {
            "type": "string",
            "example": "license_key"
          },
          "limits": {
            "$ref": "#/components/schemas/inline_response_200_9_data_licensing_limits"
          },
          "next_check": {
            "type": "string",
            "example": "2021-03-10T10:46:20Z"
          },
          "error": {
            "type": "string",
            "example": ""
          },
          "check_interval_secs": {
            "type": "number",
            "example": 3600
          }
        }
      },
      "inline_response_200_9_data": {
        "type": "object",
        "properties": {
          "overlay": {
            "$ref": "#/components/schemas/inline_response_200_9_data_overlay"
          },
          "activity": {
            "$ref": "#/components/schemas/inline_response_200_9_data_activity"
          },
          "hot_spare": {
            "type": "number",
            "example": 1
          },
          "io_status": {
            "type": "string",
            "example": "STARTED"
          },
          "last_init_failure": {
            "type": "string",
            "example": ""
          },
          "drives": {
            "$ref": "#/components/schemas/inline_response_200_9_data_drives"
          },
          "name": {
            "type": "string",
            "example": "stewie"
          },
          "upgrade": {
            "type": "string",
            "example": ""
          },
          "io_status_changed_time": {
            "type": "string",
            "example": "2021-03-10T09:46:02.245149Z"
          },
          "short_drive_grace_on_failure_secs": {
            "type": "number",
            "example": 10
          },
          "io_nodes": {
            "$ref": "#/components/schemas/inline_response_200_9_data_drives"
          },
          "cloud": {
            "$ref": "#/components/schemas/inline_response_200_9_data_cloud"
          },
          "release_hash": {
            "type": "string",
            "example": "d79aaa56d95d9beb02b15783dede1ec79d4c273b"
          },
          "rebuild": {
            "$ref": "#/components/schemas/inline_response_200_9_data_rebuild"
          },
          "init_stage": {
            "type": "string",
            "example": "INITIALIZED"
          },
          "failure_domains_enabled": {
            "type": "boolean",
            "example": true
          },
          "long_drive_grace_on_failure_secs": {
            "type": "number",
            "example": 360
          },
          "hosts": {
            "$ref": "#/components/schemas/inline_response_200_9_data_hosts"
          },
          "last_init_failure_code": {
            "type": "string",
            "example": ""
          },
          "stripe_data_drives": {
            "type": "number",
            "example": 5
          },
          "release": {
            "type": "string",
            "example": "3.11.1.6926-f6e1fbb96d03ef76b64bfd4d8c2c366a"
          },
          "buckets_info": {
            "$ref": "#/components/schemas/inline_response_200_9_data_buckets_info"
          },
          "active_alerts_count": {
            "type": "number",
            "example": 0
          },
          "time": {
            "$ref": "#/components/schemas/inline_response_200_9_data_time"
          },
          "net": {
            "$ref": "#/components/schemas/inline_response_200_9_data_net"
          },
          "buckets": {
            "$ref": "#/components/schemas/inline_response_200_9_data_buckets"
          },
          "scrubber_bytes_per_sec": {
            "type": "number",
            "example": 134217728
          },
          "init_stage_changed_time": {
            "type": "string",
            "example": "2021-03-10T09:45:42.599016Z"
          },
          "capacity": {
            "$ref": "#/components/schemas/inline_response_200_9_data_capacity"
          },
          "is_cluster": {
            "type": "boolean",
            "example": true
          },
          "block_upgrade_task": {
            "$ref": "#/components/schemas/inline_response_200_9_data_block_upgrade_task"
          },
          "grim_reaper": {
            "$ref": "#/components/schemas/inline_response_200_9_data_grim_reaper"
          },
          "stripe_protection_drives": {
            "type": "number",
            "example": 2
          },
          "guid": {
            "type": "string",
            "example": "9724f5ec-a68c-437d-8411-03c8425c06b8"
          },
          "start_io_starting_drives_grace_secs": {
            "type": "number",
            "example": 60
          },
          "start_io_starting_io_nodes_grace_secs": {
            "type": "number",
            "example": 30
          },
          "hanging_ios": {
            "$ref": "#/components/schemas/inline_response_200_9_data_hanging_ios"
          },
          "last_init_failure_time": {
            "type": "string",
            "example": ""
          },
          "nodes": {
            "$ref": "#/components/schemas/inline_response_200_9_data_nodes"
          },
          "licensing": {
            "$ref": "#/components/schemas/inline_response_200_9_data_licensing"
          }
        }
      },
      "inline_response_200_10_data": {
        "type": "object",
        "properties": {
          "range_available": {
            "type": "number",
            "example": 255
          },
          "range": {
            "type": "string",
            "description": "IP range (format - A.B.C.D-E.F.G.H or A.B.C.D-F.G.H or A.B.C.D-G.H or A.B.C.D-H)",
            "example": "1.1.1.1-1.1.1.254"
          },
          "gateway": {
            "type": "string",
            "description": "Default gateway IP",
            "example": "255.255.255.255"
          },
          "netmask": {
            "type": "number",
            "description": "Subnet mask bits (0..32)",
            "example": 0
          }
        }
      },
      "inline_response_200_15_eventFields": {
        "type": "object",
        "properties": {
          "swRelease": {
            "type": "string",
            "example": "3.11.1.8425-0d19171073bfbb7a5cca4cc3a8a4bfdf"
          },
          "nodeId": {
            "type": "number",
            "example": 0
          },
          "pid": {
            "type": "number",
            "example": 170
          },
          "swVersion": {
            "type": "string",
            "example": "3.11.1.8425"
          }
        }
      },
      "inline_response_200_15_data": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "example": "2021-03-21T08:23:11.4965413Z"
          },
          "hash": {
            "type": "number",
            "example": 0
          },
          "entity": {
            "type": "string",
            "example": "Cluster"
          },
          "severity": {
            "type": "string",
            "example": "INFO"
          },
          "permission": {
            "type": "string",
            "example": "User"
          },
          "category": {
            "type": "string",
            "example": "Node"
          },
          "eventFields": {
            "$ref": "#/components/schemas/inline_response_200_15_eventFields"
          },
          "type": {
            "type": "string",
            "example": "NodeStarted"
          },
          "nid": {
            "type": "string",
            "example": "NodeId<0>"
          }
        }
      },
      "inline_response_200_27_data_params": {
        "type": "object",
        "properties": {
          "master_key_name": {
            "type": "string",
            "example": "cluster_key"
          },
          "base_url": {
            "type": "string",
            "example": "https://compney.com:4000"
          }
        }
      },
      "inline_response_200_27_data": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/inline_response_200_27_data_params"
          },
          "kms_type": {
            "type": "string",
            "example": "HashiCorpVault"
          }
        }
      },
      "inline_response_200_29_data_role_groups": {
        "type": "object",
        "properties": {
          "OrgAdmin": {
            "type": "string",
            "example": "Enterprise Admins"
          },
          "ClusterAdmin": {
            "type": "string",
            "example": "Enterprise Admins"
          },
          "ReadOnly": {
            "type": "string",
            "example": ""
          },
          "Regular": {
            "type": "string",
            "example": ""
          }
        }
      },
      "inline_response_200_29_data": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "group_object_class": {
            "type": "string",
            "example": "group"
          },
          "ignore_start_tls_failure": {
            "type": "boolean",
            "example": false
          },
          "group_membership_attribute": {
            "type": "string",
            "example": "member"
          },
          "server_timeout_secs": {
            "type": "number",
            "example": 10
          },
          "user_id_attribute": {
            "type": "string",
            "example": "sAMAccountName"
          },
          "start_tls": {
            "type": "boolean",
            "example": false
          },
          "protocol_version": {
            "type": "number",
            "example": 3
          },
          "reader_username": {
            "type": "string",
            "example": "username@ad.com"
          },
          "group_id_attribute": {
            "type": "string",
            "example": "cn"
          },
          "base_dn": {
            "type": "string",
            "example": "DC=ad,DC=company,DC=io"
          },
          "user_object_class": {
            "type": "string",
            "example": "user"
          },
          "role_groups": {
            "$ref": "#/components/schemas/inline_response_200_29_data_role_groups"
          },
          "server_type": {
            "type": "string",
            "example": "LDAP"
          },
          "user_revocation_attribute": {
            "type": "string",
            "example": ""
          },
          "domain": {
            "type": "string",
            "example": ""
          },
          "server_uri": {
            "type": "string",
            "example": "company.io"
          }
        }
      },
      "inline_response_200_30_data_usage": {
        "type": "object",
        "properties": {
          "drive_capacity_gb": {
            "type": "number",
            "example": 2374
          },
          "usable_capacity_gb": {
            "type": "number",
            "example": 1024
          },
          "obs_capacity_gb": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_30_data_limits": {
        "type": "object",
        "properties": {
          "drive_capacity_gb": {
            "type": "number",
            "example": 2374
          },
          "usable_capacity_gb": {
            "type": "number",
            "example": 18446744073709552000
          },
          "obs_capacity_gb": {
            "type": "number",
            "example": 1000000000000000
          },
          "valid_from": {
            "type": "string",
            "example": "2021-03-16T07:52:39Z"
          },
          "expires_at": {
            "type": "string",
            "example": "2021-04-15T07:52:39Z"
          }
        }
      },
      "inline_response_200_30_data": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "example": "Classic"
          },
          "usage": {
            "$ref": "#/components/schemas/inline_response_200_30_data_usage"
          },
          "license": {
            "type": "string",
            "example": "license_string"
          },
          "limits": {
            "$ref": "#/components/schemas/inline_response_200_30_data_limits"
          },
          "next_check": {
            "type": "string",
            "example": "2021-03-16T11:52:40Z"
          },
          "error": {
            "type": "string",
            "example": ""
          },
          "check_interval_secs": {
            "type": "number",
            "example": 3600
          }
        }
      },
      "inline_response_200_35_data": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "example": "340"
          },
          "rules": {
            "type": "array",
            "example": [],
            "items": {
              "type": "object"
            }
          },
          "id": {
            "type": "string",
            "example": "NfsClientGroupId<1>"
          },
          "name": {
            "type": "string",
            "example": "group_name"
          }
        }
      },
      "inline_response_200_40_data_info_startTime": {
        "type": "object",
        "properties": {
          "usecs": {
            "type": "number",
            "example": 1615473402366933
          }
        }
      },
      "inline_response_200_40_data_info_extentSpec_extentKey": {
        "type": "object",
        "properties": {
          "extentIndex": {
            "type": "string",
            "example": "ExtentIndex<INVALID>"
          },
          "inodeId": {
            "type": "string",
            "example": "InodeId<INVALID>"
          }
        }
      },
      "inline_response_200_40_data_info_extentSpec": {
        "type": "object",
        "properties": {
          "snapLayerId": {
            "type": "string",
            "example": "SnapLayerId<INVALID>"
          },
          "extentKey": {
            "$ref": "#/components/schemas/inline_response_200_40_data_info_extentSpec_extentKey"
          }
        }
      },
      "inline_response_200_40_data_info_counts": {
        "type": "object",
        "properties": {
          "SUCCESS": {
            "type": "number",
            "example": 1
          }
        }
      },
      "inline_response_200_40_data_info": {
        "type": "object",
        "properties": {
          "concurrencyAtEnd": {
            "type": "number",
            "example": 0
          },
          "executionTimeUSecs": {
            "type": "number",
            "example": 265839
          },
          "key": {
            "type": "string",
            "example": "B_84/23caf2eb-246e-4743-b6f1-ebcc70672b07/s/I_0/17/0"
          },
          "concurrencyAtStart": {
            "type": "number",
            "example": 3
          },
          "size": {
            "type": "number",
            "example": 56
          },
          "lastCurlError": {
            "type": "string",
            "example": "ok"
          },
          "lastLatencyUSecs": {
            "type": "number",
            "example": 265821
          },
          "fsId": {
            "type": "string",
            "example": "FSId<0>"
          },
          "lastHTTPRespCode": {
            "type": "string",
            "example": "INVALID"
          },
          "curlErrorStr": {
            "type": "string",
            "example": ""
          },
          "startTime": {
            "$ref": "#/components/schemas/inline_response_200_40_data_info_startTime"
          },
          "extentSpec": {
            "$ref": "#/components/schemas/inline_response_200_40_data_info_extentSpec"
          },
          "counts": {
            "$ref": "#/components/schemas/inline_response_200_40_data_info_counts"
          }
        }
      },
      "inline_response_200_40_data_NodeId121": {
        "type": "object",
        "properties": {
          "chanType": {
            "type": "string",
            "example": "Upload"
          },
          "info": {
            "$ref": "#/components/schemas/inline_response_200_40_data_info"
          },
          "opPhase": {
            "type": "string",
            "example": "Recent"
          }
        }
      },
      "inline_response_200_40_data": {
        "type": "object",
        "properties": {
          "NodeId<121>": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_40_data_NodeId121"
            }
          }
        }
      },
      "inline_response_200_41_data_details_pathgoader000600000263.txt": {
        "type": "object",
        "properties": {
          "ssd_write_cache_bytes": {
            "type": "number",
            "example": 1048576
          },
          "file_size": {
            "type": "number",
            "example": 1048576
          },
          "ssd_read_cache_bytes": {
            "type": "number",
            "example": 0
          },
          "object_storage_bytes": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_41_data_details": {
        "type": "object",
        "properties": {
          "path/goader/00/06/00000263.txt": {
            "$ref": "#/components/schemas/inline_response_200_41_data_details_pathgoader000600000263.txt"
          }
        }
      },
      "inline_response_200_41_data": {
        "type": "object",
        "properties": {
          "details": {
            "$ref": "#/components/schemas/inline_response_200_41_data_details"
          }
        }
      },
      "inline_response_200_45_data_0x0000092ddf3d00000": {
        "type": "object",
        "properties": {
          "inodeId": {
            "type": "number",
            "example": 10092623495168
          },
          "totalBytes": {
            "type": "number",
            "example": 8192
          },
          "owner": {
            "type": "string",
            "example": "user"
          },
          "dataBlocks": {
            "type": "number",
            "example": 0
          },
          "graceSeconds": {
            "type": "number",
            "example": 4294967295
          },
          "hardLimitBytes": {
            "type": "number",
            "example": 1000001536
          },
          "snapViewId": {
            "type": "number",
            "example": 0
          },
          "metadataBlocks": {
            "type": "number",
            "example": 2
          },
          "softLimitBytes": {
            "type": "number",
            "example": 18446744073709548000
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          }
        }
      },
      "inline_response_200_45_data": {
        "type": "object",
        "properties": {
          "0x0000092ddf3d0000:0": {
            "$ref": "#/components/schemas/inline_response_200_45_data_0x0000092ddf3d00000"
          }
        }
      },
      "inline_response_200_46_data": {
        "type": "object",
        "properties": {
          "joinedDomainMappingToId": {
            "type": "number",
            "example": 4290000000
          },
          "sambaHosts": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "HostId<0>"
            }
          },
          "idmapBackend": {
            "type": "string",
            "example": "rfc2307"
          },
          "sambaIps": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "some_ip"
            }
          },
          "defaultDomainMappingToId": {
            "type": "number",
            "example": 4291000000
          },
          "domainName": {
            "type": "string",
            "example": "ad.company.com"
          },
          "name": {
            "type": "string",
            "example": "CompanySMB"
          },
          "encryption": {
            "type": "string",
            "example": "enabled"
          },
          "domainJoined": {
            "type": "boolean",
            "example": true
          },
          "joinedDomainMappingFromId": {
            "type": "number",
            "example": 0
          },
          "domainAdminUsername": {
            "type": "string",
            "example": "wekadmin"
          },
          "defaultDomainMappingFromId": {
            "type": "number",
            "example": 4290000001
          },
          "domainNetbiosName": {
            "type": "string",
            "example": "ad"
          }
        }
      },
      "inline_response_200_53_data": {
        "type": "object",
        "properties": {
          "access_token_expiry": {
            "type": "number",
            "example": 100000
          },
          "refresh_token_expiry": {
            "type": "number",
            "example": 31536000
          }
        }
      },
      "inline_response_200_56_data": {
        "type": "object",
        "properties": {
          "extra": {
            "type": "object"
          },
          "locator": {
            "type": "string",
            "example": "59c2ddf9/d/s/16/spec/b365-4e7a-b924-b2f0956b7f9c"
          }
        }
      },
      "inline_response_200_57_data_all": {
        "type": "object",
        "properties": {
          "rpc": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "inline_response_200_57_data": {
        "type": "object",
        "properties": {
          "all": {
            "$ref": "#/components/schemas/inline_response_200_57_data_all"
          }
        }
      },
      "inline_response_200_58_data_RESPONSE_COUNT_LENGTH_REQUIRED": {
        "type": "object",
        "properties": {
          "is_histogram": {
            "type": "boolean",
            "example": false
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "hTTPCode"
            }
          },
          "permission": {
            "type": "string",
            "example": "USER"
          },
          "for_node_type": {
            "type": "string",
            "example": "IO"
          },
          "label": {
            "type": "string",
            "example": "Response Count LENGTH_REQUIRED(total)"
          },
          "description": {
            "type": "string",
            "example": "Number of HTTP LENGTH_REQUIRED responses per second"
          },
          "type": {
            "type": "string",
            "example": "Rate"
          },
          "unit": {
            "type": "string",
            "example": "Responses/Sec"
          },
          "can_accumulate": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "inline_response_200_58_data": {
        "type": "object",
        "properties": {
          "RESPONSE_COUNT_LENGTH_REQUIRED": {
            "$ref": "#/components/schemas/inline_response_200_58_data_RESPONSE_COUNT_LENGTH_REQUIRED"
          }
        }
      },
      "inline_response_200_59_data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "NodeId<121>"
          },
          "cpu_utilization_percentage": {
            "type": "number",
            "example": 10.597062895894386
          },
          "reads_per_second": {
            "type": "number",
            "example": 0
          },
          "read_latency_usecs": {
            "type": "number",
            "example": 0
          },
          "writes_per_second": {
            "type": "number",
            "example": 0
          },
          "rdmaTX_bytes_per_second": {
            "type": "number",
            "example": 0
          },
          "L6RX_bytes_per_second": {
            "type": "number",
            "example": 230401.41501184125
          },
          "obs_upload_bytes_per_second": {
            "type": "number",
            "example": 0
          },
          "read_bytes_per_second": {
            "type": "number",
            "example": 0
          },
          "ops_per_second": {
            "type": "number",
            "example": 0
          },
          "write_latency_usecs": {
            "type": "number",
            "example": 0
          },
          "L6TX_bytes_per_second": {
            "type": "number",
            "example": 281357.40098772035
          },
          "obs_download_bytes_per_second": {
            "type": "number",
            "example": 0
          },
          "rdmaRX_bytes_per_second": {
            "type": "number",
            "example": 0
          },
          "write_bytes_per_second": {
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_60_data": {
        "type": "object",
        "properties": {
          "server_estimated_bytes": {
            "type": "number",
            "example": 136205240
          },
          "retention_secs": {
            "type": "number",
            "example": 86400
          },
          "client_estimated_bytes": {
            "type": "number",
            "example": 0
          },
          "client_estimation_result_type": {
            "type": "string",
            "example": "NO_CLIENTS"
          }
        }
      },
      "inline_response_200_61_data_result": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "STARTING_NODES"
          }
        }
      },
      "inline_response_200_61_data": {
        "type": "object",
        "properties": {
          "resend_secs": {
            "type": "number",
            "example": 3
          },
          "result": {
            "$ref": "#/components/schemas/inline_response_200_61_data_result"
          },
          "completed": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "inline_response_200_62_data_result": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "STOPPING_SERVICES"
          }
        }
      },
      "inline_response_200_62_data": {
        "type": "object",
        "properties": {
          "resend_secs": {
            "type": "number",
            "example": 3
          },
          "result": {
            "$ref": "#/components/schemas/inline_response_200_62_data_result"
          },
          "completed": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "inline_response_200_63_params": {
        "type": "object",
        "properties": {
          "obsId": {
            "type": "string",
            "example": "ObjectStorageId<0>"
          },
          "fsId": {
            "type": "string",
            "example": "FSId<0>"
          },
          "purpose": {
            "type": "string",
            "example": "UNTIER"
          }
        }
      },
      "inline_response_200_63_data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "CWTaskId<0>"
          },
          "state": {
            "type": "string",
            "example": "RUNNING"
          },
          "params": {
            "$ref": "#/components/schemas/inline_response_200_63_params"
          },
          "uid": {
            "type": "string",
            "example": "uid_string"
          },
          "progress": {
            "type": "number",
            "example": 99.04327392578125
          },
          "type": {
            "type": "string",
            "example": "OBS_DETACH"
          },
          "description": {
            "type": "string",
            "example": "Detaching Object Storage `obs1` from filesystem `default`"
          },
          "is_explicitly_paused": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "inline_response_200_64_data": {
        "type": "object",
        "properties": {
          "cpuPercentLimit": {
            "type": "number",
            "example": 5
          }
        }
      },
      "inline_response_200_65_data": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "organization": {
            "type": "string",
            "example": "company"
          },
          "country": {
            "type": "string",
            "example": "IL"
          },
          "state": {
            "type": "string",
            "example": "TA"
          },
          "expiredDate": {
            "type": "string",
            "example": "2021-03-20T08:17:34Z"
          },
          "email": {
            "type": "string",
            "example": "mail@company.io"
          },
          "commonName": {
            "type": "string",
            "example": "t1831-*.company.io"
          },
          "locality": {
            "type": "string",
            "example": "Tel-Aviv"
          },
          "organizationUnit": {
            "type": "string",
            "example": "qa"
          }
        }
      },
      "inline_response_200_68_data": {
        "type": "object",
        "properties": {
          "org_id": {
            "type": "number",
            "example": 0
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "source": {
            "type": "string",
            "example": "Internal"
          },
          "role": {
            "type": "string",
            "example": "ClusterAdmin"
          },
          "org_name": {
            "type": "string",
            "example": "Root"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_200"
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_400"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_401"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_404"
            }
          }
        }
      }
    },
    "requestBodies": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}